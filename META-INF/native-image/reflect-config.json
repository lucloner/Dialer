[
{
  "name":"[I"
},
{
  "name":"[J"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.Serializers;"
},
{
  "name":"[Lcom.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry;"
},
{
  "name":"[Ljava.io.Serializable;"
},
{
  "name":"[Ljava.lang.CharSequence;"
},
{
  "name":"[Ljava.lang.Class;"
},
{
  "name":"[Ljava.lang.Comparable;"
},
{
  "name":"[Ljava.lang.Object;"
},
{
  "name":"[Ljava.lang.String;"
},
{
  "name":"[Ljava.lang.constant.Constable;"
},
{
  "name":"[Ljava.lang.constant.ConstantDesc;"
},
{
  "name": "[Ljava.lang.invoke.TypeDescriptor$OfField;"
},
  {
    "name": "[Ljava.lang.invoke.TypeDescriptor;"
  },
  {
    "name": "[Ljava.lang.reflect.AnnotatedElement;"
  },
  {
    "name": "[Ljava.lang.reflect.GenericDeclaration;"
  },
  {
    "name": "[Ljava.lang.reflect.Type;"
  },
  {
  "name":"[Ljava.sql.Statement;"
},
{
  "name":"[Lnet.vicp.biggee.aot.vpn.expressvpn.Dialer.data.Host;"
},
{
  "name":"[Lorg.hibernate.event.spi.AutoFlushEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.DeleteEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.DirtyCheckEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.EvictEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.FlushEntityEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.FlushEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.InitializeCollectionEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.LoadEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.LockEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.MergeEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.PersistEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.PostDeleteEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.PostInsertEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.PostLoadEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.PostUpdateEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.PreLoadEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.RefreshEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.ReplicateEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.ResolveNaturalIdEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.SaveOrUpdateEventListener;"
},
{
  "name":"[Lorg.springframework.boot.context.config.ConfigDataLocation;"
},
{
  "name": "[Lorg.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor$MappingsProvider;"
},
  {
  "name":"[Lorg.springframework.core.annotation.AnnotationAttributes;"
},
{
  "name":"[Lorg.springframework.core.io.InputStreamSource;"
},
{
  "name":"[Lorg.springframework.core.io.Resource;",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }, {"name":"from","parameterTypes":["java.lang.String"] }, {"name":"of","parameterTypes":["java.lang.String"] }, {"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"[Lorg.springframework.util.ConcurrentReferenceHashMap$Segment;"
},
{
  "name":"[Lorg.springframework.web.bind.annotation.RequestMethod;"
},
{
  "name":"[Z"
},
{
  "name":"boolean",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean"] }, {"name":"from","parameterTypes":["java.lang.Boolean"] }, {"name":"of","parameterTypes":["java.lang.Boolean"] }, {"name":"valueOf","parameterTypes":["java.lang.Boolean"] }]
},
{
  "name":"ch.qos.logback.classic.BasicConfigurator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.LoggerContext"
},
{
  "name":"ch.qos.logback.classic.joran.SerializedModelConfigurator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.DateConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LevelConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LineSeparatorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LoggerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.MessageConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.ThreadConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.spi.LogbackServiceProvider"
},
{
  "name":"ch.qos.logback.classic.util.DefaultJoranConfigurator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"char",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Character"] }, {"name":"from","parameterTypes":["java.lang.Character"] }, {"name":"of","parameterTypes":["java.lang.Character"] }, {"name":"valueOf","parameterTypes":["java.lang.Character"] }]
},
{
  "name":"co.elastic.clients.elasticsearch.ElasticsearchClient"
},
{
  "name":"co.elastic.clients.transport.ElasticsearchTransport"
},
{
  "name":"com.couchbase.client.java.Bucket"
},
{
  "name":"com.couchbase.client.java.Cluster"
},
{
  "name":"com.datastax.oss.driver.api.core.CqlSession"
},
{
  "name": "com.fasterxml.aalto$AsyncXMLStreamReader"
},
  {
    "name": "com.fasterxml.aalto.AsyncXMLStreamReader"
  },
  {
  "name":"com.fasterxml.jackson.core.JsonGenerator"
},
{
  "name": "com.fasterxml.jackson.core.ObjectCodec",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "methods": [
    {
      "name": "getJsonFactory",
      "parameterTypes": []
    },
    {
      "name": "readValues",
      "parameterTypes": [
        "com.fasterxml.jackson.core.JsonParser",
        "com.fasterxml.jackson.core.type.TypeReference"
      ]
    },
    {
      "name": "readValues",
      "parameterTypes": [
        "com.fasterxml.jackson.core.JsonParser",
        "java.lang.Class"
      ]
    }
  ]
},
  {
    "name": "com.fasterxml.jackson.core.TreeCodec",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.core.Versioned",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.Module",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getDependencies",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ObjectMapper",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "createArrayNode",
        "parameterTypes": []
      },
      {
        "name": "createObjectNode",
        "parameterTypes": []
      },
      {
        "name": "getFactory",
        "parameterTypes": []
      },
      {
        "name": "missingNode",
        "parameterTypes": []
      },
      {
        "name": "nullNode",
        "parameterTypes": []
      },
      {
        "name": "readTree",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.ResolvedType"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.TypeReference"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "java.lang.Class"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.ResolvedType"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.TypeReference"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "java.lang.Class"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "treeAsTokens",
        "parameterTypes": [
          "com.fasterxml.jackson.core.TreeNode"
        ]
      },
      {
        "name": "treeToValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.TreeNode",
          "java.lang.Class"
        ]
      },
      {
        "name": "version",
        "parameterTypes": []
      },
      {
        "name": "writeTree",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonGenerator",
          "com.fasterxml.jackson.core.TreeNode"
        ]
      },
      {
        "name": "writeValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonGenerator",
          "java.lang.Object"
        ]
      }
    ]
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7SupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name": "com.fasterxml.jackson.databind.module.SimpleModule",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "methods": [
    {
      "name": "addAbstractTypeMapping",
      "parameterTypes": [
        "java.lang.Class",
        "java.lang.Class"
      ]
    },
    {
      "name": "addDeserializer",
      "parameterTypes": [
        "java.lang.Class",
        "com.fasterxml.jackson.databind.JsonDeserializer"
      ]
    },
    {
      "name": "addKeyDeserializer",
      "parameterTypes": [
        "java.lang.Class",
        "com.fasterxml.jackson.databind.KeyDeserializer"
      ]
    },
    {
      "name": "addKeySerializer",
      "parameterTypes": [
        "java.lang.Class",
        "com.fasterxml.jackson.databind.JsonSerializer"
      ]
    },
    {
      "name": "addSerializer",
      "parameterTypes": [
        "com.fasterxml.jackson.databind.JsonSerializer"
      ]
    },
    {
      "name": "addSerializer",
      "parameterTypes": [
        "java.lang.Class",
        "com.fasterxml.jackson.databind.JsonSerializer"
      ]
    },
    {
      "name": "addValueInstantiator",
      "parameterTypes": [
        "java.lang.Class",
        "com.fasterxml.jackson.databind.deser.ValueInstantiator"
      ]
    },
    {
      "name": "getModuleName",
      "parameterTypes": []
    },
    {
      "name": "getTypeId",
      "parameterTypes": []
    },
    {
      "name": "registerSubtypes",
      "parameterTypes": [
        "java.util.Collection"
      ]
    },
    {
      "name": "registerSubtypes",
      "parameterTypes": [
        "com.fasterxml.jackson.databind.jsontype.NamedType[]"
      ]
    },
    {
      "name": "registerSubtypes",
      "parameterTypes": [
        "java.lang.Class[]"
      ]
    },
    {
      "name": "setAbstractTypes",
      "parameterTypes": [
        "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"
      ]
    },
    {
      "name": "setDeserializerModifier",
      "parameterTypes": [
        "com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"
      ]
    },
    {
      "name": "setDeserializers",
      "parameterTypes": [
        "com.fasterxml.jackson.databind.module.SimpleDeserializers"
      ]
    },
    {
      "name": "setKeyDeserializers",
      "parameterTypes": [
        "com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"
      ]
    },
    {
      "name": "setKeySerializers",
      "parameterTypes": [
        "com.fasterxml.jackson.databind.module.SimpleSerializers"
      ]
    },
    {
      "name": "setMixInAnnotation",
      "parameterTypes": [
        "java.lang.Class",
        "java.lang.Class"
      ]
    },
    {
      "name": "setSerializerModifier",
      "parameterTypes": [
        "com.fasterxml.jackson.databind.ser.BeanSerializerModifier"
      ]
    },
    {
      "name": "setSerializers",
      "parameterTypes": [
        "com.fasterxml.jackson.databind.module.SimpleSerializers"
      ]
    },
    {
      "name": "setValueInstantiators",
      "parameterTypes": [
        "com.fasterxml.jackson.databind.module.SimpleValueInstantiators"
      ]
    },
    {
      "name": "setupModule",
      "parameterTypes": [
        "com.fasterxml.jackson.databind.Module$SetupContext"
      ]
    },
    {
      "name": "version",
      "parameterTypes": []
    }
  ]
},
  {
  "name":"com.fasterxml.jackson.dataformat.smile$SmileFactory"
},
{
  "name":"com.fasterxml.jackson.dataformat.smile.SmileFactory"
},
{
  "name":"com.fasterxml.jackson.dataformat.xml$XmlMapper"
},
{
  "name":"com.fasterxml.jackson.dataformat.xml.XmlMapper"
},
{
  "name":"com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name": "com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "methods": [
    {
      "name": "close",
      "parameterTypes": []
    },
    {
      "name": "setupModule",
      "parameterTypes": [
        "com.fasterxml.jackson.databind.Module$SetupContext"
      ]
    },
    {
      "name": "shutdown",
      "parameterTypes": []
    }
  ]
},
{
  "name":"com.github.benmanes.caffeine.cache.Caffeine"
},
{
  "name":"com.google.common.base.Optional"
},
{
  "name":"com.google.gson$Gson"
},
{
  "name":"com.google.gson.Gson"
},
{
  "name": "com.google.protobuf$Message"
},
  {
    "name": "com.google.protobuf.Message"
  },
  {
  "name":"com.hazelcast.core.HazelcastInstance"
},
{
  "name":"com.ibm.icu.text.Collator"
},
{
  "name":"com.mongodb.client.MongoClient"
},
{
  "name":"com.mongodb.reactivestreams.client.MongoClient"
},
{
  "name":"com.querydsl.core.types$Predicate"
},
{
  "name":"com.querydsl.core.types.Predicate"
},
{
  "name":"com.rabbitmq.client.Channel"
},
{
  "name": "com.samskivert.mustache$Template"
},
  {
  "name":"com.samskivert.mustache.Mustache"
},
{
  "name": "com.samskivert.mustache.Template"
},
  {
  "name":"com.sendgrid.SendGrid"
},
{
  "name": "com.stoyanr.evictor.ConcurrentMapWithTimedEviction"
},
  {
  "name":"com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name": "com.sun.xml.internal.stream.XMLInputFactoryImpl",
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
  {
  "name":"com.sun.xml.internal.stream.events.XMLEventFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.unboundid.ldap.listener.InMemoryDirectoryServer"
},
{
  "name":"com.zaxxer.hikari.HikariConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addDataSourceProperty","parameterTypes":["java.lang.String","java.lang.Object"] }, {"name":"addHealthCheckProperty","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"copyStateTo","parameterTypes":["com.zaxxer.hikari.HikariConfig"] }, {"name":"getCatalog","parameterTypes":[] }, {"name":"getConnectionInitSql","parameterTypes":[] }, {"name":"getConnectionTestQuery","parameterTypes":[] }, {"name":"getConnectionTimeout","parameterTypes":[] }, {"name":"getDataSource","parameterTypes":[] }, {"name":"getDataSourceClassName","parameterTypes":[] }, {"name":"getDataSourceJNDI","parameterTypes":[] }, {"name":"getDataSourceProperties","parameterTypes":[] }, {"name":"getDriverClassName","parameterTypes":[] }, {"name":"getExceptionOverrideClassName","parameterTypes":[] }, {"name":"getHealthCheckProperties","parameterTypes":[] }, {"name":"getHealthCheckRegistry","parameterTypes":[] }, {"name":"getIdleTimeout","parameterTypes":[] }, {"name":"getInitializationFailTimeout","parameterTypes":[] }, {"name":"getJdbcUrl","parameterTypes":[] }, {"name":"getKeepaliveTime","parameterTypes":[] }, {"name":"getLeakDetectionThreshold","parameterTypes":[] }, {"name":"getMaxLifetime","parameterTypes":[] }, {"name":"getMaximumPoolSize","parameterTypes":[] }, {"name":"getMetricRegistry","parameterTypes":[] }, {"name":"getMetricsTrackerFactory","parameterTypes":[] }, {"name":"getMinimumIdle","parameterTypes":[] }, {"name":"getPassword","parameterTypes":[] }, {"name":"getPoolName","parameterTypes":[] }, {"name":"getScheduledExecutor","parameterTypes":[] }, {"name":"getSchema","parameterTypes":[] }, {"name":"getThreadFactory","parameterTypes":[] }, {"name":"getTransactionIsolation","parameterTypes":[] }, {"name":"getUsername","parameterTypes":[] }, {"name":"getValidationTimeout","parameterTypes":[] }, {"name":"isAllowPoolSuspension","parameterTypes":[] }, {"name":"isAutoCommit","parameterTypes":[] }, {"name":"isIsolateInternalQueries","parameterTypes":[] }, {"name":"isReadOnly","parameterTypes":[] }, {"name":"isRegisterMbeans","parameterTypes":[] }, {"name":"setAllowPoolSuspension","parameterTypes":["boolean"] }, {"name":"setAutoCommit","parameterTypes":["boolean"] }, {"name":"setCatalog","parameterTypes":["java.lang.String"] }, {"name":"setConnectionInitSql","parameterTypes":["java.lang.String"] }, {"name":"setConnectionTestQuery","parameterTypes":["java.lang.String"] }, {"name":"setConnectionTimeout","parameterTypes":["long"] }, {"name":"setDataSource","parameterTypes":["javax.sql.DataSource"] }, {"name":"setDataSourceClassName","parameterTypes":["java.lang.String"] }, {"name":"setDataSourceJNDI","parameterTypes":["java.lang.String"] }, {"name":"setDataSourceProperties","parameterTypes":["java.util.Properties"] }, {"name":"setDriverClassName","parameterTypes":["java.lang.String"] }, {"name":"setExceptionOverrideClassName","parameterTypes":["java.lang.String"] }, {"name":"setHealthCheckProperties","parameterTypes":["java.util.Properties"] }, {"name":"setIdleTimeout","parameterTypes":["long"] }, {"name":"setInitializationFailTimeout","parameterTypes":["long"] }, {"name":"setIsolateInternalQueries","parameterTypes":["boolean"] }, {"name":"setJdbcUrl","parameterTypes":["java.lang.String"] }, {"name":"setKeepaliveTime","parameterTypes":["long"] }, {"name":"setLeakDetectionThreshold","parameterTypes":["long"] }, {"name":"setMaxLifetime","parameterTypes":["long"] }, {"name":"setMaximumPoolSize","parameterTypes":["int"] }, {"name":"setMinimumIdle","parameterTypes":["int"] }, {"name":"setPassword","parameterTypes":["java.lang.String"] }, {"name":"setPoolName","parameterTypes":["java.lang.String"] }, {"name":"setReadOnly","parameterTypes":["boolean"] }, {"name":"setRegisterMbeans","parameterTypes":["boolean"] }, {"name":"setScheduledExecutor","parameterTypes":["java.util.concurrent.ScheduledExecutorService"] }, {"name":"setSchema","parameterTypes":["java.lang.String"] }, {"name":"setThreadFactory","parameterTypes":["java.util.concurrent.ThreadFactory"] }, {"name":"setTransactionIsolation","parameterTypes":["java.lang.String"] }, {"name":"setUsername","parameterTypes":["java.lang.String"] }, {"name":"setValidationTimeout","parameterTypes":["long"] }, {"name":"validate","parameterTypes":[] }]
},
{
  "name":"com.zaxxer.hikari.HikariConfigMXBean",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"com.zaxxer.hikari.HikariDataSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"getConnection","parameterTypes":[] }, {"name":"getConnection","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"getLogWriter","parameterTypes":[] }, {"name":"getLoginTimeout","parameterTypes":[] }, {"name":"getParentLogger","parameterTypes":[] }, {"name":"isWrapperFor","parameterTypes":["java.lang.Class"] }, {"name":"setHealthCheckRegistry","parameterTypes":["java.lang.Object"] }, {"name":"setLogWriter","parameterTypes":["java.io.PrintWriter"] }, {"name":"setLoginTimeout","parameterTypes":["int"] }, {"name":"setMetricRegistry","parameterTypes":["java.lang.Object"] }, {"name":"setMetricsTrackerFactory","parameterTypes":["com.zaxxer.hikari.metrics.MetricsTrackerFactory"] }, {"name":"unwrap","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"com.zaxxer.hikari.pool.HikariProxyConnection",
  "methods":[{"name":"getSchema","parameterTypes":[] }]
},
{
  "name":"com.zaxxer.hikari.pool.PoolBase",
  "fields":[{"name":"catalog"}]
},
{
  "name":"com.zaxxer.hikari.pool.PoolEntry",
  "fields":[{"name":"state"}]
},
{
  "name": "feign.Client"
},
  {
    "name": "freemarker.template$Configuration"
  },
  {
  "name":"freemarker.template.Configuration"
},
{
  "name":"graphql.GraphQL"
},
{
  "name":"groovy.lang$MetaClass"
},
{
  "name":"groovy.lang.MetaClass"
},
{
  "name": "groovy.text$TemplateEngine"
},
  {
    "name": "groovy.text.TemplateEngine"
  },
  {
  "name":"groovy.text.markup.MarkupTemplateEngine"
},
{
  "name":"io.micrometer.context.ContextRegistry"
},
{
  "name": "io.micrometer.core.instrument.MeterRegistry"
},
  {
  "name":"io.netty.buffer.AbstractByteBufAllocator",
  "queryAllDeclaredMethods":true
},
{
  "name": "io.netty.buffer.ByteBuf"
},
  {
  "name":"io.netty.buffer.PooledByteBufAllocator"
},
{
  "name": "io.netty.channel.AbstractChannelHandlerContext",
  "fields": [
    {
      "name": "handlerState"
    }
  ]
},
  {
    "name": "io.netty.channel.ChannelInboundHandlerAdapter",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelInitializer",
    "methods": [
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelOutboundBuffer",
    "fields": [
      {
        "name": "totalPendingSize"
      },
      {
        "name": "unwritable"
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultChannelConfig",
    "fields": [
      {
        "name": "autoRead"
      },
      {
        "name": "writeBufferWaterMark"
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultChannelPipeline",
    "fields": [
      {
        "name": "estimatorHandle"
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultChannelPipeline$HeadContext",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultChannelPipeline$TailContext",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultFileRegion"
  },
  {
    "name": "io.netty.channel.epoll.Epoll"
  },
  {
    "name": "io.netty.channel.epoll.NativeDatagramPacketArray$NativeDatagramPacket"
  },
  {
    "name": "io.netty.channel.unix.DatagramSocketAddress"
  },
  {
    "name": "io.netty.channel.unix.DomainDatagramSocketAddress"
  },
  {
    "name": "io.netty.channel.unix.FileDescriptor",
    "fields": [
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "io.netty.channel.unix.PeerCredentials"
  },
  {
    "name": "io.netty.incubator.channel.uring.IOUring"
  },
  {
    "name": "io.netty.util.AbstractReferenceCounted",
    "fields": [
      {
        "name": "refCnt"
      }
    ]
  },
  {
    "name": "io.netty.util.DefaultAttributeMap",
    "fields": [
      {
        "name": "attributes"
      }
    ]
  },
  {
  "name":"io.netty.util.NettyRuntime"
},
{
  "name":"io.netty.util.concurrent.DefaultPromise",
  "fields":[{"name":"result"}]
},
{
  "name":"io.netty.util.concurrent.SingleThreadEventExecutor",
  "fields":[{"name":"state"}, {"name":"threadProperties"}]
},
{
  "name": "io.netty.util.internal.NativeLibraryUtil",
  "methods": [
    {
      "name": "loadLibrary",
      "parameterTypes": [
        "java.lang.String",
        "boolean"
      ]
    }
  ]
},
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
    "fields": [
      {
        "name": "producerLimit"
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
    "fields": [
      {
        "name": "consumerIndex"
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
    "fields": [
      {
        "name": "producerIndex"
      }
    ]
  },
  {
    "name": "io.netty5.buffer$Buffer"
  },
  {
    "name": "io.netty5.buffer.Buffer"
  },
  {
  "name":"io.r2dbc.spi.ConnectionFactory"
},
{
  "name":"io.reactivex.rxjava3.core$Flowable"
},
{
  "name":"io.reactivex.rxjava3.core.Flowable"
},
{
  "name":"io.rsocket.RSocket"
},
{
  "name":"io.rsocket.core.RSocketServer"
},
{
  "name":"io.smallrye.mutiny$Multi"
},
{
  "name":"io.smallrye.mutiny.Multi"
},
{
  "name":"io.undertow.Undertow"
},
{
  "name": "io.undertow.websockets$WebSocketProtocolHandshakeHandler"
},
  {
    "name": "io.undertow.websockets.WebSocketProtocolHandshakeHandler"
  },
  {
  "name":"io.vavr.control$Option"
},
{
  "name":"io.vavr.control$Try"
},
{
  "name":"io.vavr.control.Option"
},
{
  "name":"io.vavr.control.Try"
},
{
  "name":"jakarta.activation.MimeType"
},
{
  "name":"jakarta.annotation.ManagedBean"
},
{
  "name": "jakarta.annotation.PostConstruct",
  "queryAllDeclaredMethods": true
},
{
  "name":"jakarta.annotation.PreDestroy"
},
{
  "name":"jakarta.annotation.Resource"
},
{
  "name":"jakarta.ejb$EJB"
},
{
  "name":"jakarta.ejb$TransactionAttribute"
},
{
  "name":"jakarta.ejb.EJB"
},
{
  "name":"jakarta.ejb.TransactionAttribute"
},
{
  "name":"jakarta.inject.Inject"
},
{
  "name":"jakarta.inject.Named"
},
{
  "name":"jakarta.inject.Provider"
},
{
  "name":"jakarta.inject.Qualifier"
},
{
  "name":"jakarta.jms.ConnectionFactory"
},
{
  "name":"jakarta.jms.Message"
},
{
  "name":"jakarta.json.bind$Jsonb"
},
{
  "name":"jakarta.json.bind.Jsonb"
},
{
  "name":"jakarta.mail.internet.MimeMessage"
},
{
  "name":"jakarta.persistence.Column",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"updatable","parameterTypes":[] }, {"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.Entity",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.EntityManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": [
        "jdk.proxy2.$Proxy105"
      ]
    },
    {
      "name": "clear",
      "parameterTypes": []
    },
    {
      "name": "close",
      "parameterTypes": []
    },
    {
      "name": "contains",
      "parameterTypes": [
        "java.lang.Object"
      ]
    },
    {
      "name": "createEntityGraph",
      "parameterTypes": [
        "java.lang.Class"
      ]
    },
    {
      "name": "createEntityGraph",
      "parameterTypes": [
        "java.lang.String"
      ]
    },
    {
      "name": "createNamedQuery",
      "parameterTypes": [
        "java.lang.String"
      ]
    },
    {
      "name": "createNamedQuery",
      "parameterTypes": [
        "java.lang.String",
        "java.lang.Class"
      ]
    },
    {
      "name": "createNamedStoredProcedureQuery",
      "parameterTypes": [
        "java.lang.String"
      ]
    },
    {
      "name": "createNativeQuery",
      "parameterTypes": [
        "java.lang.String"
      ]
    },
    {
      "name": "createNativeQuery",
      "parameterTypes": [
        "java.lang.String",
        "java.lang.Class"
      ]
    },
    {
      "name": "createNativeQuery",
      "parameterTypes": [
        "java.lang.String",
        "java.lang.String"
      ]
    },
    {
      "name": "createQuery",
      "parameterTypes": [
        "jakarta.persistence.criteria.CriteriaDelete"
      ]
    },
    {
      "name": "createQuery",
      "parameterTypes": [
        "jakarta.persistence.criteria.CriteriaQuery"
      ]
    },
    {
      "name": "createQuery",
      "parameterTypes": [
        "jakarta.persistence.criteria.CriteriaUpdate"
      ]
    },
    {
      "name": "createQuery",
      "parameterTypes": [
        "java.lang.String"
      ]
    },
    {
      "name": "createQuery",
      "parameterTypes": [
        "java.lang.String",
        "java.lang.Class"
      ]
    },
    {
      "name": "createStoredProcedureQuery",
      "parameterTypes": [
        "java.lang.String"
      ]
    },
    {
      "name": "createStoredProcedureQuery",
      "parameterTypes": [
        "java.lang.String",
        "java.lang.Class[]"
      ]
    },
    {
      "name": "createStoredProcedureQuery",
      "parameterTypes": [
        "java.lang.String",
        "java.lang.String[]"
      ]
    },
    {
      "name": "detach",
      "parameterTypes": [
        "java.lang.Object"
      ]
    },
    {
      "name": "find",
      "parameterTypes": [
        "java.lang.Class",
        "java.lang.Object"
      ]
    },
    {
      "name": "find",
      "parameterTypes": [
        "java.lang.Class",
        "java.lang.Object",
        "jakarta.persistence.LockModeType"
      ]
    },
    {
      "name": "find",
      "parameterTypes": [
        "java.lang.Class",
        "java.lang.Object",
        "jakarta.persistence.LockModeType",
        "java.util.Map"
      ]
    },
    {
      "name": "find",
      "parameterTypes": [
        "java.lang.Class",
        "java.lang.Object",
        "java.util.Map"
      ]
    },
    {
      "name": "flush",
      "parameterTypes": []
    },
    {
      "name": "from",
      "parameterTypes": [
        "jdk.proxy2.$Proxy105"
      ]
    },
    {
      "name": "getCriteriaBuilder",
      "parameterTypes": []
    },
    {
      "name": "getDelegate",
      "parameterTypes": []
    },
    {
      "name": "getEntityGraph",
      "parameterTypes": [
        "java.lang.String"
      ]
    },
    {
      "name": "getEntityGraphs",
      "parameterTypes": [
        "java.lang.Class"
      ]
    },
    {
      "name": "getEntityManagerFactory",
      "parameterTypes": []
    },
    {
      "name": "getFlushMode",
      "parameterTypes": []
    },
    {
      "name": "getLockMode",
      "parameterTypes": [
        "java.lang.Object"
      ]
    },
    {
      "name": "getMetamodel",
      "parameterTypes": []
    },
    {
      "name": "getProperties",
      "parameterTypes": []
    },
    {
      "name": "getReference",
      "parameterTypes": [
        "java.lang.Class",
        "java.lang.Object"
      ]
    },
    {
      "name": "getTransaction",
      "parameterTypes": []
    },
    {
      "name": "isJoinedToTransaction",
      "parameterTypes": []
    },
    {
      "name": "isOpen",
      "parameterTypes": []
    },
    {
      "name": "joinTransaction",
      "parameterTypes": []
    },
    {
      "name": "lock",
      "parameterTypes": [
        "java.lang.Object",
        "jakarta.persistence.LockModeType"
      ]
    },
    {
      "name": "lock",
      "parameterTypes": [
        "java.lang.Object",
        "jakarta.persistence.LockModeType",
        "java.util.Map"
      ]
    },
    {
      "name": "merge",
      "parameterTypes": [
        "java.lang.Object"
      ]
    },
    {
      "name": "of",
      "parameterTypes": [
        "jdk.proxy2.$Proxy105"
      ]
    },
    {
      "name": "persist",
      "parameterTypes": [
        "java.lang.Object"
      ]
    },
    {
      "name": "refresh",
      "parameterTypes": [
        "java.lang.Object"
      ]
    },
    {
      "name": "refresh",
      "parameterTypes": [
        "java.lang.Object",
        "jakarta.persistence.LockModeType"
      ]
    },
    {
      "name": "refresh",
      "parameterTypes": [
        "java.lang.Object",
        "jakarta.persistence.LockModeType",
        "java.util.Map"
      ]
    },
    {
      "name": "refresh",
      "parameterTypes": [
        "java.lang.Object",
        "java.util.Map"
      ]
    },
    {
      "name": "remove",
      "parameterTypes": [
        "java.lang.Object"
      ]
    },
    {
      "name": "setFlushMode",
      "parameterTypes": [
        "jakarta.persistence.FlushModeType"
      ]
    },
    {
      "name": "setProperty",
      "parameterTypes": [
        "java.lang.String",
        "java.lang.Object"
      ]
    },
    {
      "name": "unwrap",
      "parameterTypes": [
        "java.lang.Class"
      ]
    },
    {
      "name": "valueOf",
      "parameterTypes": [
        "jdk.proxy2.$Proxy105"
      ]
    }
  ]
},
{
  "name":"jakarta.persistence.EntityManagerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": [
        "jdk.proxy2.$Proxy102"
      ]
    },
    {
      "name": "addNamedEntityGraph",
      "parameterTypes": [
        "java.lang.String",
        "jakarta.persistence.EntityGraph"
      ]
    },
    {
      "name": "addNamedQuery",
      "parameterTypes": [
        "java.lang.String",
        "jakarta.persistence.Query"
      ]
    },
    {
      "name": "createEntityManager",
      "parameterTypes": []
    },
    {
      "name": "createEntityManager",
      "parameterTypes": [
        "jakarta.persistence.SynchronizationType"
      ]
    },
    {
      "name": "createEntityManager",
      "parameterTypes": [
        "jakarta.persistence.SynchronizationType",
        "java.util.Map"
      ]
    },
    {
      "name": "createEntityManager",
      "parameterTypes": [
        "java.util.Map"
      ]
    },
    {
      "name": "from",
      "parameterTypes": [
        "jdk.proxy2.$Proxy102"
      ]
    },
    {
      "name": "getCriteriaBuilder",
      "parameterTypes": []
    },
    {
      "name": "getMetamodel",
      "parameterTypes": []
    },
    {
      "name": "getPersistenceUnitUtil",
      "parameterTypes": []
    },
    {
      "name": "getProperties",
      "parameterTypes": []
    },
    {
      "name": "isOpen",
      "parameterTypes": []
    },
    {
      "name": "of",
      "parameterTypes": [
        "jdk.proxy2.$Proxy102"
      ]
    },
    {
      "name": "unwrap",
      "parameterTypes": [
        "java.lang.Class"
      ]
    },
    {
      "name": "valueOf",
      "parameterTypes": [
        "jdk.proxy2.$Proxy102"
      ]
    }
  ]
},
{
  "name":"jakarta.persistence.GeneratedValue",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.Id",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.PersistenceContext",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.persistence.PersistenceProperty",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.servlet.MultipartConfigElement"
},
{
  "name":"jakarta.servlet.Servlet"
},
{
  "name":"jakarta.servlet.ServletRegistration"
},
{
  "name":"jakarta.servlet.ServletRequest"
},
{
  "name":"jakarta.transaction.Transaction"
},
{
  "name":"jakarta.transaction.TransactionManager"
},
{
  "name":"jakarta.transaction.Transactional"
},
{
  "name":"jakarta.validation$Validator"
},
{
  "name":"jakarta.validation.ConstraintViolation"
},
{
  "name":"jakarta.validation.Validator"
},
{
  "name":"jakarta.validation.executable.ExecutableValidator"
},
{
  "name":"jakarta.xml.bind.Binder"
},
{
  "name":"java.io.Closeable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name": "java.io.FileDescriptor"
},
  {
  "name":"java.io.FilePermission"
},
{
  "name": "java.io.IOException"
},
  {
  "name":"java.io.Serializable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.lang.AutoCloseable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.Boolean",
  "methods":[{"name":"toboolean","parameterTypes":[] }]
},
{
  "name":"java.lang.Character",
  "methods":[{"name":"tochar","parameterTypes":[] }]
},
{
  "name":"java.lang.Class",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }, {"name":"from","parameterTypes":["java.lang.String"] }, {"name":"getAnnotatedInterfaces","parameterTypes":[] }, {"name":"getAnnotatedSuperclass","parameterTypes":[] }, {"name":"getDeclaredMethod","parameterTypes":["java.lang.String","java.lang.Class[]"] }, {"name":"getMethod","parameterTypes":["java.lang.String","java.lang.Class[]"] }, {"name":"getModule","parameterTypes":[] }, {"name":"getNestHost","parameterTypes":[] }, {"name":"getNestMembers","parameterTypes":[] }, {"name":"getPermittedSubclasses","parameterTypes":[] }, {"name":"getRecordComponents","parameterTypes":[] }, {"name":"isNestmateOf","parameterTypes":["java.lang.Class"] }, {"name":"isRecord","parameterTypes":[] }, {"name":"isSealed","parameterTypes":[] }, {"name":"of","parameterTypes":["java.lang.String"] }, {"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.lang.ClassLoader",
  "queryAllDeclaredMethods":true,
  "fields":[{"name":"classLoaderValueMap"}],
  "methods":[{"name":"defineClass","parameterTypes":["java.lang.String","byte[]","int","int","java.security.ProtectionDomain"] }, {"name":"getUnnamedModule","parameterTypes":[] }]
},
{
  "name":"java.lang.Iterable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"forEach","parameterTypes":["java.util.function.Consumer"] }, {"name":"spliterator","parameterTypes":[] }]
},
{
  "name":"java.lang.Module",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addExports","parameterTypes":["java.lang.String","java.lang.Module"] }, {"name":"isExported","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.lang.Object",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }]
},
{
  "name": "java.lang.OutOfMemoryError"
},
  {
    "name": "java.lang.ProcessHandle",
    "methods": [
      {
        "name": "current",
        "parameterTypes": []
      },
      {
        "name": "pid",
        "parameterTypes": []
      }
    ]
  },
  {
  "name":"java.lang.Record"
},
{
  "name":"java.lang.Runtime",
  "methods":[{"name":"version","parameterTypes":[] }]
},
{
  "name":"java.lang.Runtime$Version",
  "methods":[{"name":"feature","parameterTypes":[] }]
},
{
  "name": "java.lang.RuntimeException"
},
  {
  "name":"java.lang.RuntimePermission"
},
{
  "name":"java.lang.String",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.System",
  "methods":[{"name":"getSecurityManager","parameterTypes":[] }]
},
{
  "name":"java.lang.Thread",
  "fields":[{"name":"threadLocalRandomProbe"}]
},
{
  "name":"java.lang.Throwable",
  "allDeclaredFields":true
},
{
  "name":"java.lang.annotation.Documented",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Inherited",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Repeatable",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Retention",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.lang.annotation.Target",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.lang.constant.Constable",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.invoke.MethodHandles",
  "methods":[{"name":"privateLookupIn","parameterTypes":["java.lang.Class","java.lang.invoke.MethodHandles$Lookup"] }]
},
{
  "name":"java.lang.invoke.MethodHandles$Lookup",
  "methods":[{"name":"defineClass","parameterTypes":["byte[]"] }, {"name":"lookupClass","parameterTypes":[] }, {"name":"lookupModes","parameterTypes":[] }]
},
{
  "name":"java.lang.invoke.TypeDescriptor$OfField",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.ManagementFactory",
  "methods":[{"name":"getRuntimeMXBean","parameterTypes":[] }]
},
{
  "name":"java.lang.management.RuntimeMXBean",
  "methods":[{"name":"getInputArguments","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.AnnotatedArrayType",
  "methods":[{"name":"getAnnotatedGenericComponentType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.AnnotatedElement",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.reflect.AnnotatedType",
  "methods":[{"name":"getType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.Executable",
  "methods":[{"name":"getAnnotatedExceptionTypes","parameterTypes":[] }, {"name":"getAnnotatedParameterTypes","parameterTypes":[] }, {"name":"getAnnotatedReceiverType","parameterTypes":[] }, {"name":"getParameterCount","parameterTypes":[] }, {"name":"getParameters","parameterTypes":[] }]
},
{
  "name": "java.lang.reflect.GenericArrayType",
  "methods": [
    {
      "name": "getGenericComponentType",
      "parameterTypes": []
    }
  ]
},
  {
  "name":"java.lang.reflect.GenericDeclaration",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.reflect.Method",
  "methods":[{"name":"getAnnotatedReturnType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.Parameter",
  "methods":[{"name":"getModifiers","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"isNamePresent","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.ParameterizedType",
  "methods":[{"name":"getActualTypeArguments","parameterTypes":[] }, {"name":"getOwnerType","parameterTypes":[] }, {"name":"getRawType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.Proxy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.reflect.RecordComponent",
  "methods":[{"name":"getAccessor","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.Type",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.reflect.TypeVariable",
  "methods":[{"name":"getBounds","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.WildcardType",
  "methods":[{"name":"getLowerBounds","parameterTypes":[] }, {"name":"getUpperBounds","parameterTypes":[] }]
},
{
  "name": "java.net.InetSocketAddress"
},
  {
  "name":"java.net.NetPermission"
},
{
  "name": "java.net.PortUnreachableException"
},
  {
  "name":"java.net.ProxySelector",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.net.SocketPermission"
},
{
  "name":"java.net.URLPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.net.http.HttpClient"
},
{
  "name":"java.nio.Bits",
  "fields":[{"name":"MAX_MEMORY"}, {"name":"UNALIGNED"}]
},
{
  "name":"java.nio.Buffer",
  "fields":[{"name":"address"}]
},
{
  "name":"java.nio.ByteBuffer",
  "methods":[{"name":"alignedSlice","parameterTypes":["int"] }]
},
{
  "name":"java.nio.DirectByteBuffer",
  "methods":[{"name":"<init>","parameterTypes":["long","long"] }]
},
{
  "name": "java.nio.channels.ClosedChannelException"
},
  {
    "name": "java.nio.channels.FileChannel"
  },
  {
  "name":"java.security.AccessController",
  "methods":[{"name":"doPrivileged","parameterTypes":["java.security.PrivilegedExceptionAction"] }]
},
{
  "name":"java.security.AllPermission"
},
{
  "name":"java.security.SecureClassLoader",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.security.SecurityPermission"
},
{
  "name":"java.sql.Connection",
  "methods":[{"name":"createClob","parameterTypes":[] }, {"name":"getMetaData","parameterTypes":[] }]
},
{
  "name":"java.sql.Date"
},
{
  "name":"java.sql.SQLException",
  "fields":[{"name":"next"}]
},
{
  "name":"java.sql.Timestamp"
},
{
  "name":"java.sql.Types",
  "allPublicFields":true
},
{
  "name":"java.sql.Wrapper",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.time.LocalDateTime"
},
{
  "name": "java.util.EventListener",
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods": true
},
  {
  "name":"java.util.PropertyPermission"
},
{
  "name": "java.util.concurrent.Executor",
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods": true
},
{
  "name":"java.util.concurrent.ScheduledExecutorService"
},
{
  "name": "java.util.concurrent.ThreadFactory",
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods": true
},
  {
  "name":"java.util.concurrent.TimeUnit"
},
{
  "name":"java.util.concurrent.atomic.AtomicBoolean",
  "fields":[{"name":"value"}]
},
{
  "name":"java.util.concurrent.atomic.AtomicReference",
  "fields":[{"name":"value"}]
},
{
  "name":"java.util.concurrent.atomic.Striped64",
  "fields":[{"name":"base"}, {"name":"cellsBusy"}]
},
{
  "name":"java.util.function.Supplier",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.util.logging.LogManager"
},
{
  "name":"javax.annotation$PostConstruct"
},
{
  "name":"javax.annotation$PreDestroy"
},
{
  "name":"javax.annotation$Resource"
},
{
  "name":"javax.annotation.Nonnull"
},
{
  "name":"javax.annotation.PostConstruct"
},
{
  "name":"javax.annotation.PreDestroy"
},
{
  "name":"javax.annotation.Resource"
},
{
  "name":"javax.cache.Caching"
},
{
  "name":"javax.inject$Inject"
},
{
  "name":"javax.inject.Inject"
},
{
  "name":"javax.money$MonetaryAmount"
},
{
  "name":"javax.money.MonetaryAmount"
},
{
  "name":"javax.naming.InitialContext"
},
{
  "name":"javax.naming.Referenceable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getReference","parameterTypes":[] }]
},
{
  "name":"javax.naming.ldap.LdapContext"
},
{
  "name": "javax.persistence.EntityManagerFactory"
},
  {
  "name":"javax.smartcardio.CardPermission"
},
{
  "name":"javax.sql.CommonDataSource",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"createShardingKeyBuilder","parameterTypes":[] }]
},
{
  "name":"javax.sql.DataSource",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"createConnectionBuilder","parameterTypes":[] }]
},
{
  "name":"javax.sql.XADataSource"
},
{
  "name":"jdk.internal.loader.BuiltinClassLoader",
  "queryAllDeclaredMethods":true
},
{
  "name":"jdk.internal.loader.ClassLoaders$AppClassLoader",
  "queryAllDeclaredMethods": true,
  "methods": [
    {
      "name": "clearCache",
      "parameterTypes": []
    }
  ]
},
  {
    "name": "jdk.internal.loader.ClassLoaders$PlatformClassLoader",
    "methods": [
      {
        "name": "clearCache",
        "parameterTypes": []
      }
    ]
},
{
  "name":"jdk.internal.misc.Unsafe",
  "methods":[{"name":"getUnsafe","parameterTypes":[] }]
},
{
  "name":"kotlin$Metadata"
},
{
  "name":"kotlin.Metadata"
},
{
  "name":"kotlin.coroutines$Continuation"
},
{
  "name":"kotlin.coroutines.Continuation"
},
{
  "name":"kotlin.reflect.full$KClasses"
},
{
  "name":"kotlin.reflect.full.KClasses"
},
{
  "name":"kotlinx.coroutines.reactor$MonoKt"
},
{
  "name":"kotlinx.coroutines.reactor.MonoKt"
},
{
  "name":"kotlinx.serialization.cbor$Cbor"
},
{
  "name":"kotlinx.serialization.cbor.Cbor"
},
{
  "name":"kotlinx.serialization.json$Json"
},
{
  "name":"kotlinx.serialization.json.Json"
},
{
  "name":"kotlinx.serialization.protobuf$ProtoBuf"
},
{
  "name":"kotlinx.serialization.protobuf.ProtoBuf"
},
{
  "name":"liquibase.change.DatabaseChange"
},
{
  "name":"net.bytebuddy.description.method.MethodDescription$InDefinedShape$AbstractBase$Executable",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$Parameter",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.method.ParameterList$ForLoadedExecutable$Executable",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDefinition$Sort$AnnotatedType",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDescription$ForLoadedType$Dispatcher",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedExecutableExceptionType$Dispatcher",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedExecutableParameterType$Dispatcher",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedMethodReturnType$Dispatcher",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForComponentType$AnnotatedParameterizedType",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$MethodHandles",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$MethodHandles$Lookup",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.AllArguments",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"includeSelf","parameterTypes":[] }, {"name":"nullIfEmpty","parameterTypes":[] }, {"name":"value","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.Argument",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.BindingPriority",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.Default",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.DefaultCall",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.DefaultMethod",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.FieldValue",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"declaringType","parameterTypes":[] }, {"name":"value","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.Origin",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"cache","parameterTypes":[] }, {"name":"privileged","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.StubValue",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.Super",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.SuperCall",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.SuperMethod",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.This",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"optional","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.utility.Invoker",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.utility.Invoker$Dispatcher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"net.vicp.biggee.aot.vpn.expressvpn.Dialer.DialerApplication",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"net.vicp.biggee.aot.vpn.expressvpn.Dialer.DialerApplication$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"net.vicp.biggee.aot.vpn.expressvpn.Dialer.data.History",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"net.vicp.biggee.aot.vpn.expressvpn.Dialer.data.History_"
},
{
  "name":"net.vicp.biggee.aot.vpn.expressvpn.Dialer.data.Host",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCommand","parameterTypes":["java.lang.String"] }, {"name":"setEnabled","parameterTypes":["boolean"] }, {"name":"setLocalHost","parameterTypes":["boolean"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setProxyHost","parameterTypes":["java.lang.String"] }, {"name":"setProxyPort","parameterTypes":["int"] }]
},
{
  "name":"net.vicp.biggee.aot.vpn.expressvpn.Dialer.data.Node",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"net.vicp.biggee.aot.vpn.expressvpn.Dialer.data.Node_"
},
{
  "name":"net.vicp.biggee.aot.vpn.expressvpn.Dialer.data.Plan",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"net.vicp.biggee.aot.vpn.expressvpn.Dialer.data.Plan_"
},
{
  "name":"net.vicp.biggee.aot.vpn.expressvpn.Dialer.enums.ExpressvpnStatus"
},
{
  "name":"net.vicp.biggee.aot.vpn.expressvpn.Dialer.repo.HistoryDao",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"net.vicp.biggee.aot.vpn.expressvpn.Dialer.repo.NodesDao",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"net.vicp.biggee.aot.vpn.expressvpn.Dialer.repo.PlanDao",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"net.vicp.biggee.aot.vpn.expressvpn.Dialer.service.Connect",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": [
        "net.vicp.biggee.aot.vpn.expressvpn.Dialer.service.Status",
        "net.vicp.biggee.aot.vpn.expressvpn.Dialer.repo.HistoryDao",
        "net.vicp.biggee.aot.vpn.expressvpn.Dialer.repo.NodesDao",
        "net.vicp.biggee.aot.vpn.expressvpn.Dialer.repo.PlanDao",
        "net.vicp.biggee.aot.vpn.expressvpn.Dialer.util.RunShell"
      ]
    }
  ]
},
{
  "name": "net.vicp.biggee.aot.vpn.expressvpn.Dialer.service.Recycle",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": [
        "net.vicp.biggee.aot.vpn.expressvpn.Dialer.repo.HistoryDao",
        "net.vicp.biggee.aot.vpn.expressvpn.Dialer.repo.PlanDao",
        "net.vicp.biggee.aot.vpn.expressvpn.Dialer.service.Connect"
      ]
    }
  ]
},
{
  "name": "net.vicp.biggee.aot.vpn.expressvpn.Dialer.service.Schedule",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": [
        "net.vicp.biggee.aot.vpn.expressvpn.Dialer.service.Connect",
        "net.vicp.biggee.aot.vpn.expressvpn.Dialer.repo.HistoryDao",
        "net.vicp.biggee.aot.vpn.expressvpn.Dialer.repo.PlanDao",
        "net.vicp.biggee.aot.vpn.expressvpn.Dialer.repo.NodesDao",
        "net.vicp.biggee.aot.vpn.expressvpn.Dialer.service.Recycle"
      ]
    }
  ]
},
{
  "name":"net.vicp.biggee.aot.vpn.expressvpn.Dialer.service.Status",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["net.vicp.biggee.aot.vpn.expressvpn.Dialer.repo.HistoryDao","net.vicp.biggee.aot.vpn.expressvpn.Dialer.repo.NodesDao"] }]
},
{
  "name": "net.vicp.biggee.aot.vpn.expressvpn.Dialer.spi.DNSProvider"
},
  {
  "name":"net.vicp.biggee.aot.vpn.expressvpn.Dialer.util.RunShell",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "bindDns",
        "parameterTypes": []
      },
      {
        "name": "connectFailed",
        "parameterTypes": [
          "java.net.URI",
          "java.net.SocketAddress",
          "java.io.IOException"
        ]
      },
      {
        "name": "createRunners",
        "parameterTypes": []
      },
      {
        "name": "select",
        "parameterTypes": [
          "java.net.URI"
        ]
      },
      {
        "name": "setDns",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setHosts",
        "parameterTypes": [
          "net.vicp.biggee.aot.vpn.expressvpn.Dialer.data.Host[]"
        ]
      },
      {
        "name": "setInterval",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTolerance",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setUrls",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
},
{
  "name":"oracle.jdbc.OracleConnection"
},
{
  "name":"oracle.ucp.jdbc.PoolDataSource"
},
{
  "name":"oracle.ucp.jdbc.PoolDataSourceImpl"
},
{
  "name":"org.aopalliance.aop.Advice",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.aopalliance.intercept.Interceptor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.aopalliance.intercept.MethodInterceptor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.catalina.startup.Tomcat"
},
{
  "name":"org.apache.commons.dbcp2.BasicDataSource"
},
{
  "name":"org.apache.coyote.UpgradeProtocol"
},
{
  "name":"org.apache.hc.client5.http.impl.async.HttpAsyncClients"
},
{
  "name":"org.apache.hc.core5.http.nio.AsyncRequestProducer"
},
{
  "name":"org.apache.hc.core5.reactive.ReactiveResponseConsumer"
},
{
  "name": "org.apache.jasper.compiler$JspConfig"
},
  {
    "name": "org.apache.jasper.compiler.JspConfig"
  },
  {
  "name":"org.apache.logging.log4j.core.impl$Log4jContextFactory"
},
{
  "name":"org.apache.logging.log4j.core.impl.Log4jContextFactory"
},
{
  "name":"org.apache.logging.log4j.spi.ExtendedLogger"
},
{
  "name":"org.apache.logging.slf4j.SLF4JProvider"
},
{
  "name":"org.apache.tomcat.jdbc.pool.DataSource"
},
{
  "name":"org.apache.tomcat.jdbc.pool.DataSourceProxy"
},
{
  "name": "org.apache.tomcat.websocket.server$WsHttpUpgradeHandler"
},
  {
    "name": "org.apache.tomcat.websocket.server.WsHttpUpgradeHandler"
  },
  {
  "name":"org.aspectj.weaver.Advice"
},
{
  "name":"org.cache2k.Cache2kBuilder"
},
{
  "name":"org.eclipse.collections.api.list$ImmutableList"
},
{
  "name":"org.eclipse.collections.api.list.ImmutableList"
},
{
  "name":"org.eclipse.core.runtime$FileLocator"
},
{
  "name":"org.eclipse.core.runtime.FileLocator"
},
{
  "name":"org.eclipse.jetty.reactive.client.ReactiveRequest"
},
{
  "name":"org.eclipse.jetty.server.Server"
},
{
  "name":"org.eclipse.jetty.servlet.ServletHolder"
},
{
  "name":"org.eclipse.jetty.util.Loader"
},
{
  "name":"org.eclipse.jetty.webapp.WebAppContext"
},
{
  "name": "org.eclipse.jetty.websocket.server$JettyWebSocketServerContainer"
},
  {
    "name": "org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer"
  },
  {
  "name":"org.eclipse.persistence.internal.jpa.deployment$JavaSECMPInitializerAgent"
},
{
  "name":"org.eclipse.persistence.internal.jpa.deployment.JavaSECMPInitializerAgent"
},
{
  "name":"org.elasticsearch.client.RestClientBuilder"
},
{
  "name":"org.flywaydb.core.Flyway"
},
{
  "name":"org.glassfish.jersey.servlet$ServletContainer"
},
{
  "name":"org.glassfish.jersey.servlet.ServletContainer"
},
{
  "name":"org.h2.Driver",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.h2.jdbc.JdbcClob"
},
{
  "name":"org.h2.jdbc.JdbcLob",
  "methods":[{"name":"free","parameterTypes":[] }]
},
{
  "name":"org.h2.mvstore.MVStore$TxCounter",
  "fields":[{"name":"counter"}]
},
{
  "name":"org.h2.mvstore.Page",
  "fields":[{"name":"pos"}]
},
{
  "name":"org.h2.server.web.JakartaWebServlet"
},
{
  "name":"org.hibernate.Session",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"clear","parameterTypes":[] }, {"name":"createEntityGraph","parameterTypes":["java.lang.Class"] }, {"name":"createEntityGraph","parameterTypes":["java.lang.String"] }, {"name":"createNamedQuery","parameterTypes":["java.lang.String"] }, {"name":"createNamedQuery","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"createQuery","parameterTypes":["jakarta.persistence.criteria.CriteriaDelete"] }, {"name":"createQuery","parameterTypes":["jakarta.persistence.criteria.CriteriaQuery"] }, {"name":"createQuery","parameterTypes":["jakarta.persistence.criteria.CriteriaUpdate"] }, {"name":"createQuery","parameterTypes":["java.lang.String"] }, {"name":"createQuery","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"detach","parameterTypes":["java.lang.Object"] }, {"name":"flush","parameterTypes":[] }, {"name":"getEntityGraph","parameterTypes":["java.lang.String"] }, {"name":"getEntityGraphs","parameterTypes":["java.lang.Class"] }, {"name":"getFlushMode","parameterTypes":[] }, {"name":"getReference","parameterTypes":["java.lang.Class","java.lang.Object"] }, {"name":"merge","parameterTypes":["java.lang.Object"] }, {"name":"persist","parameterTypes":["java.lang.Object"] }, {"name":"refresh","parameterTypes":["java.lang.Object"] }, {"name":"remove","parameterTypes":["java.lang.Object"] }, {"name":"setFlushMode","parameterTypes":["jakarta.persistence.FlushModeType"] }]
},
{
  "name":"org.hibernate.SessionFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getCache","parameterTypes":[] }]
},
{
  "name":"org.hibernate.SharedSessionContract",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"beginTransaction","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"createNamedStoredProcedureQuery","parameterTypes":["java.lang.String"] }, {"name":"createStoredProcedureCall","parameterTypes":["java.lang.String"] }, {"name":"createStoredProcedureCall","parameterTypes":["java.lang.String","java.lang.Class[]"] }, {"name":"createStoredProcedureCall","parameterTypes":["java.lang.String","java.lang.String[]"] }, {"name":"createStoredProcedureQuery","parameterTypes":["java.lang.String"] }, {"name":"createStoredProcedureQuery","parameterTypes":["java.lang.String","java.lang.Class[]"] }, {"name":"createStoredProcedureQuery","parameterTypes":["java.lang.String","java.lang.String[]"] }, {"name":"doReturningWork","parameterTypes":["org.hibernate.jdbc.ReturningWork"] }, {"name":"doWork","parameterTypes":["org.hibernate.jdbc.Work"] }, {"name":"getCriteriaBuilder","parameterTypes":[] }, {"name":"getJdbcBatchSize","parameterTypes":[] }, {"name":"getNamedProcedureCall","parameterTypes":["java.lang.String"] }, {"name":"getTenantIdentifier","parameterTypes":[] }, {"name":"getTransaction","parameterTypes":[] }, {"name":"isConnected","parameterTypes":[] }, {"name":"isOpen","parameterTypes":[] }, {"name":"setJdbcBatchSize","parameterTypes":["java.lang.Integer"] }]
},
{
  "name":"org.hibernate.boot.archive.scan.internal.DisabledScanner",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.hibernate.boot.archive.spi.ArchiveDescriptorFactory"] }]
},
{
  "name":"org.hibernate.boot.cfgxml.internal.CfgXmlAccessServiceImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.boot.internal.DefaultSessionFactoryBuilderService",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.cache.internal.DisabledCaching",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.cache.internal.NoCachingRegionFactory",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.dialect.H2Dialect",
  "methods":[{"name":"<init>","parameterTypes":["org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo"] }]
},
{
  "name":"org.hibernate.dialect.PostgreSQL95Dialect"
},
{
  "name":"org.hibernate.engine.config.internal.ConfigurationServiceImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl",
  "queryAllPublicMethods":true,
  "methods":[{"name":"setJndiService","parameterTypes":["org.hibernate.engine.jndi.spi.JndiService"] }]
},
{
  "name":"org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.engine.jdbc.dialect.internal.DialectResolverSet",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.engine.jdbc.internal.JdbcServicesImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.engine.jndi.internal.JndiServiceImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.engine.query.internal.NativeQueryInterpreterStandardImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.engine.spi.PrimeAmongSecondarySupertypes",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.hibernate.engine.spi.SessionImplementor"
},
{
  "name":"org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.event.spi.EventType",
  "allDeclaredFields":true
},
{
  "name":"org.hibernate.id.Assigned",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.id.enhanced.PooledOptimizer",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class","int"] }]
},
{
  "name":"org.hibernate.id.enhanced.SequenceStyleGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.id.enhanced.StandardNamingStrategy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.internal.CoreMessageLogger_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.internal.CoreMessageLogger_$logger_en"
},
{
  "name":"org.hibernate.internal.CoreMessageLogger_$logger_en_US"
},
{
  "name":"org.hibernate.internal.EntityManagerMessageLogger_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.internal.EntityManagerMessageLogger_$logger_en"
},
{
  "name":"org.hibernate.internal.EntityManagerMessageLogger_$logger_en_US"
},
{
  "name":"org.hibernate.metamodel.mapping.MappingModelCreationLogger_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.metamodel.mapping.MappingModelCreationLogger_$logger_en"
},
{
  "name":"org.hibernate.metamodel.mapping.MappingModelCreationLogger_$logger_en_US"
},
{
  "name":"org.hibernate.metamodel.model.domain.JpaMetamodel"
},
{
  "name":"org.hibernate.persister.entity.SingleTableEntityPersister",
  "methods":[{"name":"<init>","parameterTypes":["org.hibernate.mapping.PersistentClass","org.hibernate.cache.spi.access.EntityDataAccess","org.hibernate.cache.spi.access.NaturalIdDataAccess","org.hibernate.metamodel.spi.RuntimeModelCreationContext"] }]
},
{
  "name":"org.hibernate.persister.internal.PersisterFactoryImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.persister.internal.StandardPersisterClassResolver",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.property.access.internal.PropertyAccessStrategyResolverStandardImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.proxy.HibernateProxy",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.hibernate.proxy.ProxyConfiguration",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.hibernate.proxy.ProxyConfiguration$InterceptorDispatcher",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.hibernate.query.QueryLogging_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.query.QueryLogging_$logger_en"
},
{
  "name":"org.hibernate.query.QueryLogging_$logger_en_US"
},
{
  "name":"org.hibernate.query.QueryProducer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"createMutationQuery","parameterTypes":["jakarta.persistence.criteria.CriteriaDelete"] }, {"name":"createMutationQuery","parameterTypes":["jakarta.persistence.criteria.CriteriaUpdate"] }, {"name":"createMutationQuery","parameterTypes":["java.lang.String"] }, {"name":"createMutationQuery","parameterTypes":["org.hibernate.query.criteria.JpaCriteriaInsertSelect"] }, {"name":"createNamedMutationQuery","parameterTypes":["java.lang.String"] }, {"name":"createNamedSelectionQuery","parameterTypes":["java.lang.String"] }, {"name":"createNamedSelectionQuery","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"createNativeMutationQuery","parameterTypes":["java.lang.String"] }, {"name":"createNativeQuery","parameterTypes":["java.lang.String"] }, {"name":"createNativeQuery","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"createNativeQuery","parameterTypes":["java.lang.String","java.lang.Class","java.lang.String"] }, {"name":"createNativeQuery","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"createNativeQuery","parameterTypes":["java.lang.String","java.lang.String","java.lang.Class"] }, {"name":"createSelectionQuery","parameterTypes":["jakarta.persistence.criteria.CriteriaQuery"] }, {"name":"createSelectionQuery","parameterTypes":["java.lang.String"] }, {"name":"createSelectionQuery","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"getNamedNativeQuery","parameterTypes":["java.lang.String"] }, {"name":"getNamedNativeQuery","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"getNamedQuery","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.hibernate.query.TypedParameterValue"
},
{
  "name":"org.hibernate.resource.beans.container.spi.BeanContainer"
},
{
  "name":"org.hibernate.resource.beans.internal.ManagedBeanRegistryImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.service.internal.SessionFactoryServiceRegistryFactoryImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.sql.ast.tree.SqlAstTreeLogger_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.sql.ast.tree.SqlAstTreeLogger_$logger_en"
},
{
  "name":"org.hibernate.sql.ast.tree.SqlAstTreeLogger_$logger_en_US"
},
{
  "name":"org.hibernate.stat.internal.StatisticsImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.tool.schema.internal.HibernateSchemaManagementTool",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.tool.schema.internal.script.SingleLineSqlScriptExtractor",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.type.SqlTypes",
  "allPublicFields":true
},
{
  "name":"org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager"
},
{
  "name":"org.influxdb.InfluxDB"
},
{
  "name":"org.jboss.logging.Logger"
},
{
  "name":"org.jmolecules.ddd.annotation$Identity"
},
{
  "name":"org.jmolecules.ddd.annotation.Identity"
},
{
  "name":"org.jmolecules.ddd.types$Association"
},
{
  "name":"org.jmolecules.ddd.types.Association"
},
{
  "name":"org.jooq.DSLContext"
},
{
  "name":"org.neo4j.driver.Driver"
},
{
  "name":"org.quartz.Scheduler"
},
{
  "name":"org.reactivestreams.Publisher"
},
{
  "name":"org.slf4j.Logger"
},
{
  "name":"org.slf4j.bridge.SLF4JBridgeHandler"
},
{
  "name":"org.slf4j.spi.LocationAwareLogger",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"log","parameterTypes":["org.slf4j.Marker","java.lang.String","int","java.lang.String","java.lang.Object[]","java.lang.Throwable"] }]
},
{
  "name":"org.springframework.aop.Advisor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"isPerInstance","parameterTypes":[] }]
},
{
  "name":"org.springframework.aop.PointcutAdvisor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.aop.SpringProxy",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.aop.TargetClassAware",
  "methods":[{"name":"getTargetClass","parameterTypes":[] }]
},
{
  "name":"org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"determineBeanType","parameterTypes":["java.lang.Class","java.lang.String"] }, {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"setBeforeExistingAdvisors","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.aop.framework.Advised",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addAdvisor","parameterTypes":["org.springframework.aop.Advisor"] }, {"name":"getTargetSource","parameterTypes":[] }, {"name":"isFrozen","parameterTypes":[] }]
},
{
  "name":"org.springframework.aop.framework.AopInfrastructureBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.aop.framework.ProxyConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"copyFrom","parameterTypes":["org.springframework.aop.framework.ProxyConfig"] }, {"name":"isExposeProxy","parameterTypes":[] }, {"name":"isFrozen","parameterTypes":[] }, {"name":"isOpaque","parameterTypes":[] }, {"name":"isOptimize","parameterTypes":[] }, {"name":"isProxyTargetClass","parameterTypes":[] }, {"name":"setExposeProxy","parameterTypes":["boolean"] }, {"name":"setFrozen","parameterTypes":["boolean"] }, {"name":"setOpaque","parameterTypes":["boolean"] }, {"name":"setOptimize","parameterTypes":["boolean"] }, {"name":"setProxyTargetClass","parameterTypes":["boolean"] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.aop.framework.ProxyProcessorSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }, {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, {"name":"setOrder","parameterTypes":["int"] }, {"name":"setProxyClassLoader","parameterTypes":["java.lang.ClassLoader"] }]
},
{
  "name":"org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"determineBeanType","parameterTypes":["java.lang.Class","java.lang.String"] }, {"name":"determineCandidateConstructors","parameterTypes":["java.lang.Class","java.lang.String"] }, {"name":"getEarlyBeanReference","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"isFrozen","parameterTypes":[] }, {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"postProcessBeforeInstantiation","parameterTypes":["java.lang.Class","java.lang.String"] }, {"name":"postProcessProperties","parameterTypes":["org.springframework.beans.PropertyValues","java.lang.Object","java.lang.String"] }, {"name":"predictBeanType","parameterTypes":["java.lang.Class","java.lang.String"] }, {"name":"setAdvisorAdapterRegistry","parameterTypes":["org.springframework.aop.framework.adapter.AdvisorAdapterRegistry"] }, {"name":"setApplyCommonInterceptorsFirst","parameterTypes":["boolean"] }, {"name":"setCustomTargetSourceCreators","parameterTypes":["org.springframework.aop.framework.autoproxy.TargetSourceCreator[]"] }, {"name":"setFrozen","parameterTypes":["boolean"] }, {"name":"setInterceptorNames","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.aop.scope.ScopedObject"
},
{
  "name":"org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getAdvice","parameterTypes":[] }, {"name":"getAdviceBeanName","parameterTypes":[] }, {"name":"setAdvice","parameterTypes":["org.aopalliance.aop.Advice"] }, {"name":"setAdviceBeanName","parameterTypes":["java.lang.String"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.aop.support.AbstractPointcutAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"hashCode","parameterTypes":[] }, {"name":"setOrder","parameterTypes":["int"] }]
},
{
  "name":"org.springframework.aot.hint.annotation.Reflective",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.batch.core.launch.JobLauncher"
},
{
  "name":"org.springframework.beans.factory.Aware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanClassLoaderAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanFactoryAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanNameAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.DisposableBean",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.FactoryBean",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"isSingleton","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.InitializingBean",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.SmartInitializingSingleton",
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.annotation.Autowired",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name": "org.springframework.beans.factory.annotation.Qualifier",
  "queryAllDeclaredMethods": true
},
  {
    "name": "org.springframework.beans.factory.annotation.Value",
    "queryAllDeclaredMethods": true
  },
  {
  "name":"org.springframework.beans.factory.aot.BeanFactoryInitializationAotProcessor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.aot.BeanRegistrationAotProcessor",
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods": true,
  "methods": [
    {
      "name": "isBeanExcludedFromAotProcessing",
      "parameterTypes": []
    }
  ]
},
{
  "name":"org.springframework.beans.factory.config.AbstractFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"destroy","parameterTypes":[] }, {"name":"getObject","parameterTypes":[] }, {"name":"isSingleton","parameterTypes":[] }, {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"setSingleton","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.beans.factory.config.BeanFactoryPostProcessor",
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.config.BeanPostProcessor",
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods":true,
  "methods": [
    {
      "name": "postProcessAfterInitialization",
      "parameterTypes": [
        "java.lang.Object",
        "java.lang.String"
      ]
    },
    {
      "name": "postProcessBeforeInitialization",
      "parameterTypes": [
        "java.lang.Object",
        "java.lang.String"
      ]
    }
  ]
},
{
  "name":"org.springframework.beans.factory.config.DestructionAwareBeanPostProcessor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor",
  "queryAllPublicMethods":true,
  "methods":[{"name":"postProcessAfterInstantiation","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"postProcessBeforeInstantiation","parameterTypes":["java.lang.Class","java.lang.String"] }, {"name":"postProcessProperties","parameterTypes":["org.springframework.beans.PropertyValues","java.lang.Object","java.lang.String"] }]
},
{
  "name":"org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor",
  "queryAllPublicMethods":true,
  "methods":[{"name":"determineCandidateConstructors","parameterTypes":["java.lang.Class","java.lang.String"] }, {"name":"getEarlyBeanReference","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"predictBeanType","parameterTypes":["java.lang.Class","java.lang.String"] }]
},
{
  "name":"org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor",
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.support.MergedBeanDefinitionPostProcessor",
  "queryAllPublicMethods":true,
  "methods":[{"name":"resetBeanDefinition","parameterTypes":["java.lang.String"] }]
},
{
  "name": "org.springframework.beans.factory.support.NullBean",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true
},
  {
  "name":"org.springframework.beans.factory.xml.XmlBeanDefinitionReader",
  "allPublicFields":true
},
{
  "name":"org.springframework.boot.ClearCachesApplicationListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name": "org.springframework.boot.LazyInitializationExcludeFilter",
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods": true
},
  {
  "name":"org.springframework.boot.SpringApplication",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.SpringBootConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name": "org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration"
},
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.condition$ConditionalOnAvailableEndpoint"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnAvailableEndpoint"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.Endpoint"
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthIndicator"
  },
  {
    "name": "org.springframework.boot.actuate.health.ReactiveHealthIndicator"
  },
  {
  "name":"org.springframework.boot.ansi.AnsiOutput$Enabled",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationExcludeFilter",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackage",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureAfter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureBefore",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureOrder",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.BackgroundPreinitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.EnableAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.SpringBootApplication",
  "queryAllDeclaredMethods":true
},
{
  "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
{
  "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
{
  "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    },
    {
      "name": "applicationAvailability",
      "parameterTypes": []
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.batch.JobRepositoryDependsOnDatabaseInitializationDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration"
},
  {
  "name":"org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheConfigurationImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.codec.CodecProperties",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnBean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnClass",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnJndi",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnNotWarDeployment",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnProperty",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnResource",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication$Type"
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnBeanCondition",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnClassCondition",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnJndiCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnPropertyCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnResourceCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnWarDeploymentCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.SearchStrategy"
},
{
  "name": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    },
    {
      "name": "defaultLifecycleProcessor",
      "parameterTypes": [
        "org.springframework.boot.autoconfigure.context.LifecycleProperties"
      ]
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.context.LifecycleProperties",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$ResourceBundleCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    },
    {
      "name": "propertySourcesPlaceholderConfigurer",
      "parameterTypes": []
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    },
    {
      "name": "persistenceExceptionTranslationPostProcessor",
      "parameterTypes": [
        "org.springframework.core.env.Environment"
      ]
    }
  ]
},
  {
    "name": "org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration",
    "allDeclaredFields": true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
},
{
  "name":"org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration$BootstrapExecutorCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration$JpaRepositoriesImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
{
  "name": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    },
    {
      "name": "defaultCodecCustomizer",
      "parameterTypes": [
        "org.springframework.boot.autoconfigure.codec.CodecProperties"
      ]
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    },
    {
      "name": "jacksonCodecCustomizer",
      "parameterTypes": [
        "com.fasterxml.jackson.databind.ObjectMapper"
      ]
    }
  ]
},
{
  "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": [
        "org.springframework.boot.autoconfigure.info.ProjectInfoProperties"
      ]
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$GitResourceAvailableCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name": "org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer",
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods": true
},
  {
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jsonComponentModule",
        "parameterTypes": []
      }
    ]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    },
    {
      "name": "standardJacksonObjectMapperBuilderCustomizer",
      "parameterTypes": [
        "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
        "org.springframework.beans.factory.ObjectProvider"
      ]
    }
  ]
},
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    },
    {
      "name": "jsonMixinModule",
      "parameterTypes": [
        "org.springframework.context.ApplicationContext",
        "org.springframework.boot.jackson.JsonMixinModuleEntries"
      ]
    },
    {
      "name": "jsonMixinModuleEntries",
      "parameterTypes": [
        "org.springframework.context.ApplicationContext"
      ]
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    },
    {
      "name": "jacksonObjectMapperBuilder",
      "parameterTypes": [
        "org.springframework.context.ApplicationContext",
        "java.util.List"
      ]
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    },
    {
      "name": "jacksonObjectMapper",
      "parameterTypes": [
        "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
      ]
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    },
    {
      "name": "parameterNamesModule",
      "parameterTypes": []
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonProperties",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration",
    "allDeclaredFields": true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceAvailableCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors":true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Dbcp2"
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic"
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"dataSource","parameterTypes":["org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$OracleUcp"
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Tomcat"
},
{
  "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
{
  "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": [
        "javax.sql.DataSource",
        "org.springframework.beans.factory.ObjectProvider"
      ]
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, {"name":"setDriverClassName","parameterTypes":["java.lang.String"] }, {"name":"setPassword","parameterTypes":["java.lang.String"] }, {"name":"setUrl","parameterTypes":["java.lang.String"] }, {"name":"setUsername","parameterTypes":["java.lang.String"] }]
},
{
  "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors":true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.JdbcProperties",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration",
    "allDeclaredFields": true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    },
    {
      "name": "jdbcTemplate",
      "parameterTypes": [
        "javax.sql.DataSource",
        "org.springframework.boot.autoconfigure.jdbc.JdbcProperties"
      ]
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    },
    {
      "name": "namedParameterJdbcTemplate",
      "parameterTypes": [
        "org.springframework.jdbc.core.JdbcTemplate"
      ]
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration"
},
{
  "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"hikariPoolDataSourceMetadataProvider","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
  "queryAllPublicConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
  {
    "name": "org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.netty.NettyProperties"
        ]
      }
    ]
},
{
  "name":"org.springframework.boot.autoconfigure.netty.NettyProperties",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
{
  "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["javax.sql.DataSource","org.springframework.boot.autoconfigure.orm.jpa.JpaProperties","org.springframework.beans.factory.config.ConfigurableListableBeanFactory","org.springframework.beans.factory.ObjectProvider","org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$HibernateRuntimeHints"
},
{
  "name":"org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"entityManagerFactory","parameterTypes":["org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder","org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes"] }, {"name":"entityManagerFactoryBuilder","parameterTypes":["org.springframework.orm.jpa.JpaVendorAdapter","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, {"name":"jpaVendorAdapter","parameterTypes":[] }, {"name":"transactionManager","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$PersistenceManagedTypesConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    },
    {
      "name": "persistenceManagedTypes",
      "parameterTypes": [
        "org.springframework.beans.factory.BeanFactory",
        "org.springframework.core.io.ResourceLoader"
      ]
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.orm.jpa.JpaProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getProperties","parameterTypes":[] }, {"name":"setDatabasePlatform","parameterTypes":["java.lang.String"] }, {"name":"setProperties","parameterTypes":["java.util.Map"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.quartz.SchedulerDependsOnDatabaseInitializationDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyConfigurations$ReactorResourceFactoryConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"reactorResourceFactory","parameterTypes":["org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.session.JdbcIndexedSessionRepositoryDependsOnDatabaseInitializationDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    },
    {
      "name": "dataSourceScriptDatabaseInitializer",
      "parameterTypes": [
        "javax.sql.DataSource",
        "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties"
      ]
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.R2dbcInitializationConfiguration"
},
{
  "name": "org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "methods": [
    {
      "name": "close",
      "parameterTypes": []
    },
    {
      "name": "shutdown",
      "parameterTypes": []
    }
  ]
},
{
  "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration$SqlInitializationModeCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer"
},
{
  "name": "org.springframework.boot.autoconfigure.task.ScheduledBeanLazyInitializationExcludeFilter",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "methods": [
    {
      "name": "close",
      "parameterTypes": []
    },
    {
      "name": "isExcluded",
      "parameterTypes": [
        "java.lang.String",
        "org.springframework.beans.factory.config.BeanDefinition",
        "java.lang.Class"
      ]
    },
    {
      "name": "shutdown",
      "parameterTypes": []
    }
  ]
},
  {
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "taskExecutorBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    },
    {
      "name": "scheduledBeanLazyInitializationExcludeFilter",
      "parameterTypes": []
    },
    {
      "name": "taskScheduler",
      "parameterTypes": [
        "org.springframework.boot.task.TaskSchedulerBuilder"
      ]
    },
    {
      "name": "taskSchedulerBuilder",
      "parameterTypes": [
        "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
        "org.springframework.beans.factory.ObjectProvider"
      ]
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.PlatformTransactionManagerCustomizer",
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    },
    {
      "name": "platformTransactionManagerCustomizers",
      "parameterTypes": [
        "org.springframework.beans.factory.ObjectProvider"
      ]
    }
  ]
},
{
  "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
{
  "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    },
    {
      "name": "transactionTemplate",
      "parameterTypes": [
        "org.springframework.transaction.PlatformTransactionManager"
      ]
    }
  ]
},
{
  "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "methods": [
    {
      "name": "close",
      "parameterTypes": []
    },
    {
      "name": "shutdown",
      "parameterTypes": []
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionProperties",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    },
    {
      "name": "customize",
      "parameterTypes": [
        "org.springframework.transaction.PlatformTransactionManager"
      ]
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.jta.JndiJtaConfiguration"
},
{
  "name": "org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.OnEnabledResourceChainCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getSsl","parameterTypes":[] }, {"name":"setPort","parameterTypes":["java.lang.Integer"] }, {"name":"setSsl","parameterTypes":["org.springframework.boot.web.server.Ssl"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebProperties",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebResourcesRuntimeHints"
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration$NotReactiveWebApplicationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"nettyWebServerFactoryCustomizer","parameterTypes":["org.springframework.core.env.Environment","org.springframework.boot.autoconfigure.web.ServerProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.NettyWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"customize","parameterTypes":["org.springframework.boot.web.server.WebServerFactory"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name": "org.springframework.boot.autoconfigure.web.format.WebConversionService",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "methods": [
    {
      "name": "close",
      "parameterTypes": []
    },
    {
      "name": "shutdown",
      "parameterTypes": []
    }
  ]
},
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration$AnnotationConfig",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": [
        "org.springframework.context.ApplicationContext"
      ]
    },
    {
      "name": "httpHandler",
      "parameterTypes": [
        "org.springframework.beans.factory.ObjectProvider"
      ]
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartAutoConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    },
    {
      "name": "defaultPartHttpMessageReaderCustomizer",
      "parameterTypes": [
        "org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartProperties"
      ]
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartProperties",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"reactiveWebServerFactoryCustomizer","parameterTypes":["org.springframework.boot.autoconfigure.web.ServerProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedJetty"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedNetty",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"nettyReactiveWebServerFactory","parameterTypes":["org.springframework.http.client.reactive.ReactorResourceFactory","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedTomcat"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedUndertow"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"customize","parameterTypes":["org.springframework.boot.web.server.WebServerFactory"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$EnableWebFluxConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": [
        "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
        "org.springframework.boot.autoconfigure.web.WebProperties",
        "org.springframework.boot.autoconfigure.web.ServerProperties",
        "org.springframework.beans.factory.ObjectProvider"
      ]
    },
    {
      "name": "localeContextResolver",
      "parameterTypes": []
    },
    {
      "name": "webFluxConversionService",
      "parameterTypes": []
    },
    {
      "name": "webFluxValidator",
      "parameterTypes": []
    },
    {
      "name": "webSessionManager",
      "parameterTypes": [
        "org.springframework.beans.factory.ObjectProvider"
      ]
    }
  ]
},
{
  "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WebFluxConfig",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": [
        "org.springframework.boot.autoconfigure.web.WebProperties",
        "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
        "org.springframework.beans.factory.ListableBeanFactory",
        "org.springframework.beans.factory.ObjectProvider",
        "org.springframework.beans.factory.ObjectProvider",
        "org.springframework.beans.factory.ObjectProvider",
        "org.springframework.beans.factory.ObjectProvider"
      ]
    },
    {
      "name": "addFormatters",
      "parameterTypes": [
        "org.springframework.format.FormatterRegistry"
      ]
    },
    {
      "name": "addResourceHandlers",
      "parameterTypes": [
        "org.springframework.web.reactive.config.ResourceHandlerRegistry"
      ]
    },
    {
      "name": "configureArgumentResolvers",
      "parameterTypes": [
        "org.springframework.web.reactive.result.method.annotation.ArgumentResolverConfigurer"
      ]
    },
    {
      "name": "configureHttpMessageCodecs",
      "parameterTypes": [
        "org.springframework.http.codec.ServerCodecConfigurer"
      ]
    },
    {
      "name": "configureViewResolvers",
      "parameterTypes": [
        "org.springframework.web.reactive.config.ViewResolverRegistry"
      ]
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WelcomePageConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    },
    {
      "name": "welcomePageRouterFunctionMapping",
      "parameterTypes": [
        "org.springframework.context.ApplicationContext",
        "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
        "org.springframework.boot.autoconfigure.web.WebProperties"
      ]
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": [
        "org.springframework.boot.autoconfigure.web.ServerProperties",
        "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties"
      ]
    },
    {
      "name": "webSessionIdResolver",
      "parameterTypes": []
    }
  ]
},
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "setMessageReaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMessageWriters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setViewResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.error.DefaultErrorWebExceptionHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": [
        "org.springframework.boot.autoconfigure.web.ServerProperties"
      ]
    },
    {
      "name": "errorAttributes",
      "parameterTypes": []
    },
    {
      "name": "errorWebExceptionHandler",
      "parameterTypes": [
        "org.springframework.boot.web.reactive.error.ErrorAttributes",
        "org.springframework.boot.autoconfigure.web.WebProperties",
        "org.springframework.beans.factory.ObjectProvider",
        "org.springframework.http.codec.ServerCodecConfigurer",
        "org.springframework.context.ApplicationContext"
      ]
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorConfiguration$HttpClient5"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorConfiguration$JdkClient"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorConfiguration$JettyClient"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorConfiguration$ReactorNetty",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration$WebClientCodecsConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    },
    {
      "name": "exchangeStrategiesCustomizer",
      "parameterTypes": [
        "org.springframework.beans.factory.ObjectProvider"
      ]
    }
  ]
},
{
  "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientCodecCustomizer",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "methods": [
    {
      "name": "close",
      "parameterTypes": []
    },
    {
      "name": "customize",
      "parameterTypes": [
        "org.springframework.web.reactive.function.client.WebClient$Builder"
      ]
    },
    {
      "name": "shutdown",
      "parameterTypes": []
    }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ConditionalOnMissingFilterBean",
  "queryAllDeclaredMethods":true
},
{
  "name": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
  "queryAllPublicConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.availability.ApplicationAvailability",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getLivenessState",
        "parameterTypes": []
      },
      {
        "name": "getReadinessState",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.availability.ApplicationAvailabilityBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getLastChangeEvent",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getState",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getState",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.boot.availability.AvailabilityState"
        ]
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
},
{
  "name":"org.springframework.boot.builder.ParentContextCloserApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory"] }]
},
{
  "name":"org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.ContextIdApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.FileEncodingApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.TypeExcludeFilter",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.AnsiOutputApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory","org.springframework.boot.ConfigurableBootstrapContext"] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigDataLocation",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"of","parameterTypes":["java.lang.String"] }, {"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigDataLocationEditor"
},
{
  "name":"org.springframework.boot.context.config.ConfigDataNotFoundAction",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigDataProperties",
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"this$0"}],
  "methods":[{"name":"<init>","parameterTypes":["java.util.List","org.springframework.boot.context.config.ConfigDataProperties$Activate"] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.core.io.ResourceLoader"] }]
},
{
  "name":"org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.DelegatingApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.StandardConfigDataLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.StandardConfigDataLocationResolver",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory","org.springframework.boot.context.properties.bind.Binder","org.springframework.core.io.ResourceLoader"] }]
},
{
  "name":"org.springframework.boot.context.event.EventPublishingRunListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.SpringApplication","java.lang.String[]"] }]
},
{
  "name":"org.springframework.boot.context.logging.LoggingApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.BoundConfigurationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationProperties",
  "queryAllDeclaredMethods":true
},
{
  "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBindHandlerAdvisor",
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods": true
},
  {
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.DeprecatedConfigurationProperty",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.EnableConfigurationProperties",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.NestedConfigurationProperty",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.bind.Name",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.bind.Nested",
  "queryAllDeclaredMethods":true
},
{
  "name": "org.springframework.boot.convert.DurationUnit",
  "queryAllDeclaredMethods": true
},
{
  "name":"org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.PropertiesPropertySourceLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory"] }]
},
{
  "name":"org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.YamlPropertySourceLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name": "org.springframework.boot.jackson.JsonComponentModule",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "methods": [
    {
      "name": "afterPropertiesSet",
      "parameterTypes": []
    },
    {
      "name": "close",
      "parameterTypes": []
    },
    {
      "name": "setBeanFactory",
      "parameterTypes": [
        "org.springframework.beans.factory.BeanFactory"
      ]
    },
    {
      "name": "shutdown",
      "parameterTypes": []
    }
  ]
},
  {
    "name": "org.springframework.boot.jackson.JsonMixinModule",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModuleEntries",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
  "name":"org.springframework.boot.jdbc.SpringJdbcDependsOnDatabaseInitializationDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.jdbc.XADataSourceWrapper"
},
{
  "name": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true
},
  {
  "name":"org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.jooq.JooqDependsOnDatabaseInitializationDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.java.JavaLoggingSystem.Factory"
},
{
  "name":"org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.log4j2.Log4J2LoggingSystem.Factory"
},
{
  "name":"org.springframework.boot.logging.logback.ColorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.LogbackLoggingSystem.Factory"
},
{
  "name":"org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.core.env.Environment"] }]
},
{
  "name":"org.springframework.boot.orm.jpa.JpaDependsOnDatabaseInitializationDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.core.env.Environment"] }]
},
{
  "name":"org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.reactor.DebugAgentEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name": "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "methods": [
    {
      "name": "afterPropertiesSet",
      "parameterTypes": []
    },
    {
      "name": "initializeDatabase",
      "parameterTypes": []
    },
    {
      "name": "setResourceLoader",
      "parameterTypes": [
        "org.springframework.core.io.ResourceLoader"
      ]
    }
  ]
},
  {
  "name":"org.springframework.boot.sql.init.dependency.AnnotationDependsOnDatabaseInitializationDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name": "org.springframework.boot.task.TaskExecutorBuilder",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "methods": [
    {
      "name": "close",
      "parameterTypes": []
    },
    {
      "name": "shutdown",
      "parameterTypes": []
    }
  ]
},
{
  "name": "org.springframework.boot.task.TaskSchedulerBuilder",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "methods": [
    {
      "name": "close",
      "parameterTypes": []
    },
    {
      "name": "shutdown",
      "parameterTypes": []
    }
  ]
},
{
  "name":"org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory",
  "methods":[{"name":"toMetadataReaderFactory","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods": true,
  "methods": [
    {
      "name": "byAnnotation",
      "parameterTypes": [
        "java.lang.Class"
      ]
    }
  ]
},
{
  "name": "org.springframework.boot.web.codec.CodecCustomizer",
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods": true
},
{
  "name":"org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getShutdown","parameterTypes":[] }, {"name":"getWebServer","parameterTypes":["org.springframework.http.server.reactive.HttpHandler"] }, {"name":"setShutdown","parameterTypes":["org.springframework.boot.web.server.Shutdown"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name": "org.springframework.boot.web.reactive.error.DefaultErrorAttributes",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "methods": [
    {
      "name": "close",
      "parameterTypes": []
    },
    {
      "name": "getError",
      "parameterTypes": [
        "org.springframework.web.reactive.function.server.ServerRequest"
      ]
    },
    {
      "name": "getErrorAttributes",
      "parameterTypes": [
        "org.springframework.web.reactive.function.server.ServerRequest",
        "org.springframework.boot.web.error.ErrorAttributeOptions"
      ]
    },
    {
      "name": "shutdown",
      "parameterTypes": []
    },
    {
      "name": "storeErrorInformation",
      "parameterTypes": [
        "java.lang.Throwable",
        "org.springframework.web.server.ServerWebExchange"
      ]
    }
  ]
},
  {
    "name": "org.springframework.boot.web.reactive.error.ErrorAttributes",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.reactive.error.ErrorWebExceptionHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
},
{
  "name": "org.springframework.boot.web.reactive.function.client.WebClientCustomizer",
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods": true
},
{
  "name":"org.springframework.boot.web.reactive.server.AbstractReactiveWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.web.reactive.server.ConfigurableReactiveWebServerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.reactive.server.ReactiveWebServerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addErrorPages","parameterTypes":["org.springframework.boot.web.server.ErrorPage[]"] }, {"name":"getAddress","parameterTypes":[] }, {"name":"getCompression","parameterTypes":[] }, {"name":"getErrorPages","parameterTypes":[] }, {"name":"getHttp2","parameterTypes":[] }, {"name":"getPort","parameterTypes":[] }, {"name":"getServerHeader","parameterTypes":[] }, {"name":"getSsl","parameterTypes":[] }, {"name":"getSslStoreProvider","parameterTypes":[] }, {"name":"setAddress","parameterTypes":["java.net.InetAddress"] }, {"name":"setCompression","parameterTypes":["org.springframework.boot.web.server.Compression"] }, {"name":"setErrorPages","parameterTypes":["java.util.Set"] }, {"name":"setHttp2","parameterTypes":["org.springframework.boot.web.server.Http2"] }, {"name":"setPort","parameterTypes":["int"] }, {"name":"setServerHeader","parameterTypes":["java.lang.String"] }, {"name":"setSsl","parameterTypes":["org.springframework.boot.web.server.Ssl"] }, {"name":"setSslStoreProvider","parameterTypes":["org.springframework.boot.web.server.SslStoreProvider"] }]
},
{
  "name":"org.springframework.boot.web.server.ConfigurableWebServerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.ErrorPageRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.Ssl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setEnabled","parameterTypes":["boolean"] }, {"name":"setEnabledProtocols","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"org.springframework.boot.web.server.WebServerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.WebServerFactoryCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }]
},
{
  "name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cache.Cache"
},
{
  "name": "org.springframework.cache.CacheManager",
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods": true
},
  {
    "name": "org.springframework.cache.caffeine.CaffeineCacheManager"
},
{
  "name":"org.springframework.cache.interceptor.CacheAspectSupport"
},
{
  "name": "org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    },
    {
      "name": "afterSingletonsInstantiated",
      "parameterTypes": []
    },
    {
      "name": "configurationPropertiesBeans",
      "parameterTypes": []
    },
    {
      "name": "configurationPropertiesRebinder",
      "parameterTypes": [
        "org.springframework.cloud.context.properties.ConfigurationPropertiesBeans"
      ]
    },
    {
      "name": "setApplicationContext",
      "parameterTypes": [
        "org.springframework.context.ApplicationContext"
      ]
    }
  ]
},
  {
    "name": "org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "environmentManager",
        "parameterTypes": [
          "org.springframework.core.env.ConfigurableEnvironment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.autoconfigure.RefreshAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "configDataContextRefresher",
        "parameterTypes": [
          "org.springframework.context.ConfigurableApplicationContext",
          "org.springframework.cloud.context.scope.refresh.RefreshScope",
          "org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties"
        ]
      },
      {
        "name": "loggingRebinder",
        "parameterTypes": []
      },
      {
        "name": "refreshEventListener",
        "parameterTypes": [
          "org.springframework.cloud.context.refresh.ContextRefresher"
        ]
      },
      {
        "name": "refreshScope",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshScopeBeanDefinitionEnhancer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "postProcessBeanDefinitionRegistry",
        "parameterTypes": [
          "org.springframework.beans.factory.support.BeanDefinitionRegistry"
        ]
      },
      {
        "name": "postProcessBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
        ]
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.BootstrapApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.BootstrapConfigFileApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.LoggingSystemShutdownListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.RefreshBootstrapRegistryInitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.TextEncryptorConfigBootstrapper",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.encrypt.DecryptEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.encrypt.KeyProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.encrypt.RsaProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.marker$Marker"
  },
  {
    "name": "org.springframework.cloud.bootstrap.marker.Marker"
  },
  {
    "name": "org.springframework.cloud.client.CommonsClientAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.ConditionalOnBlockingDiscoveryEnabled",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.ConditionalOnDiscoveryEnabled",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.ConditionalOnDiscoveryHealthIndicatorEnabled",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.ConditionalOnReactiveDiscoveryEnabled",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.HostInfoEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.DiscoveryClient",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "probe",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.ReactiveDiscoveryClient",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "probe",
        "parameterTypes": []
      },
      {
        "name": "reactiveProbe",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "description",
        "parameterTypes": []
      },
      {
        "name": "getInstances",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getServices",
        "parameterTypes": []
      },
      {
        "name": "probe",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "compositeDiscoveryClient",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.composite.reactive.ReactiveCompositeDiscoveryClient",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "description",
        "parameterTypes": []
      },
      {
        "name": "getInstances",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getServices",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.composite.reactive.ReactiveCompositeDiscoveryClientAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "reactiveCompositeDiscoveryClient",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "description",
        "parameterTypes": []
      },
      {
        "name": "getInstances",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "getServices",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "setInet",
        "parameterTypes": [
          "org.springframework.cloud.commons.util.InetUtils"
        ]
      },
      {
        "name": "setServer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "simpleDiscoveryClient",
        "parameterTypes": [
          "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties"
        ]
      },
      {
        "name": "simpleDiscoveryProperties",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClient",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "description",
        "parameterTypes": []
      },
      {
        "name": "getInstances",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "getServices",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClientAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "simpleReactiveDiscoveryClient",
        "parameterTypes": [
          "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryProperties"
        ]
      },
      {
        "name": "simpleReactiveDiscoveryProperties",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalanced",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "loadBalancedRestTemplateInitializerDeprecated",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "loadBalancerRequestFactory",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerClient"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "loadBalancerInterceptor",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerClient",
          "org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory"
        ]
      },
      {
        "name": "restTemplateCustomizer",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryMissingOrDisabledCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerClient",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "loadBalancerClientsDefaultsMappingsProvider",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerEagerLoadProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "intercept",
        "parameterTypes": [
          "org.springframework.http.HttpRequest",
          "byte[]",
          "org.springframework.http.client.ClientHttpRequestExecution"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getHealthCheck",
        "parameterTypes": []
      },
      {
        "name": "getHint",
        "parameterTypes": []
      },
      {
        "name": "getHintHeaderName",
        "parameterTypes": []
      },
      {
        "name": "getRetry",
        "parameterTypes": []
      },
      {
        "name": "getStickySession",
        "parameterTypes": []
      },
      {
        "name": "getXForwarded",
        "parameterTypes": []
      },
      {
        "name": "isCallGetWithRequestOnDelegates",
        "parameterTypes": []
      },
      {
        "name": "setCallGetWithRequestOnDelegates",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHealthCheck",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$HealthCheck"
        ]
      },
      {
        "name": "setHint",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setHintHeaderName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRetry",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Retry"
        ]
      },
      {
        "name": "setStickySession",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$StickySession"
        ]
      },
      {
        "name": "setxForwarded",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$XForwarded"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerRequestTransformer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.RestTemplateCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.ServiceInstanceChooser",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "filter",
        "parameterTypes": [
          "org.springframework.web.reactive.function.client.ClientRequest",
          "org.springframework.web.reactive.function.client.ExchangeFunction"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.reactive.LoadBalancedExchangeFilterFunction",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "loadBalancerWebClientBuilderBeanPostProcessor",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction",
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$OnAnyLoadBalancerImplementationPresentCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "reactorDeferringLoadBalancerExchangeFilterFunction",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerWebClientBuilderBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.reactive.ReactiveLoadBalancer$Factory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "loadBalancerExchangeFilterFunction",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.reactive.ReactiveLoadBalancer$Factory",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerExchangeFilterFunction",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "filter",
        "parameterTypes": [
          "org.springframework.web.reactive.function.client.ClientRequest",
          "org.springframework.web.reactive.function.client.ExchangeFunction"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "defaultsBindHandlerAdvisor",
        "parameterTypes": [
          "org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor$MappingsProvider[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "apply",
        "parameterTypes": [
          "org.springframework.boot.context.properties.bind.BindHandler"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor$MappingsProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x000072a23b35a230"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x000072a23b35a230"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x000072a23b35a230"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x000072a23b35a230"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.commons.util.InetUtils",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.commons.util.InetUtilsProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.commons.util.UtilAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "inetUtils",
        "parameterTypes": [
          "org.springframework.cloud.commons.util.InetUtilsProperties"
        ]
      },
      {
        "name": "inetUtilsProperties",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.config.client$ConfigServerInstanceProvider"
  },
  {
    "name": "org.springframework.cloud.config.client.ConfigServerInstanceProvider"
  },
  {
    "name": "org.springframework.cloud.configuration.CompatibilityVerifier",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "compositeCompatibilityVerifier",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "sleuthPresentVerifier",
        "parameterTypes": []
      },
      {
        "name": "springBootVersionVerifier",
        "parameterTypes": [
          "org.springframework.cloud.configuration.CompatibilityVerifierProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.configuration.CompatibilityVerifierProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.configuration.CompositeCompatibilityVerifier",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.configuration.SleuthPresentVerifier",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "verify",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.configuration.SpringBootVersionVerifier",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "verify",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.context.environment.EnvironmentManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.context.named.NamedContextFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "buildContext",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createContext",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getConfigurations",
        "parameterTypes": []
      },
      {
        "name": "getContextNames",
        "parameterTypes": []
      },
      {
        "name": "getInstance",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "getInstance",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "getInstance",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.core.ResolvableType"
        ]
      },
      {
        "name": "getInstances",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "getLazyProvider",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "getParent",
        "parameterTypes": []
      },
      {
        "name": "getProvider",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "registerBeans",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.context.support.GenericApplicationContext"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setConfigurations",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.context.named.NamedContextFactory$Specification",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.context.properties.ConfigurationPropertiesBeans",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.context.refresh.ConfigDataContextRefresher",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.context.refresh.ContextRefresher",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "refresh",
        "parameterTypes": []
      },
      {
        "name": "refreshEnvironment",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.context.restart.RestartListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.context.scope.refresh.RefreshScope"
  },
  {
    "name": "org.springframework.cloud.endpoint.event.RefreshEventListener",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "supportsEventType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.annotation.LoadBalancerClient",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfigurationRegistrar",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "getConfiguration",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.annotation.LoadBalancerClients",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.loadbalancer.aot.LoadBalancerChildContextInitializer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "processAheadOfTime",
        "parameterTypes": [
          "org.springframework.beans.factory.support.RegisteredBean"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "transformRequest",
        "parameterTypes": [
          "org.springframework.http.HttpRequest",
          "org.springframework.cloud.client.ServiceInstance"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "choose",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "choose",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.cloud.client.loadbalancer.Request"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.cloud.client.ServiceInstance",
          "org.springframework.cloud.client.loadbalancer.LoadBalancerRequest"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.cloud.client.loadbalancer.LoadBalancerRequest"
        ]
      },
      {
        "name": "reconstructURI",
        "parameterTypes": [
          "org.springframework.cloud.client.ServiceInstance",
          "java.net.URI"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.cache.DefaultLoadBalancerCacheManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getCache",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCacheNames",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "blockingLoadBalancerClient",
        "parameterTypes": [
          "org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory"
        ]
      },
      {
        "name": "loadBalancerServiceInstanceCookieTransformer",
        "parameterTypes": [
          "org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory"
        ]
      },
      {
        "name": "xForwarderHeadersTransformer",
        "parameterTypes": [
          "org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "loadBalancerChildContextInitializer",
        "parameterTypes": [
          "org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory",
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "loadBalancerClientFactory",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "loadBalancerEagerContextInitializer",
        "parameterTypes": [
          "org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory",
          "org.springframework.cloud.client.loadbalancer.LoadBalancerEagerLoadProperties"
        ]
      },
      {
        "name": "zoneConfig",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$DefaultLoadBalancerCacheManagerConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "defaultLoadBalancerCacheManager",
        "parameterTypes": [
          "org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCacheManagerWarnConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "caffeineWarnLogger",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$OnCaffeineCacheMissingCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$OnLoadBalancerCachingEnabledCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.config.LoadBalancerZoneConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "transformRequest",
        "parameterTypes": [
          "org.springframework.http.HttpRequest",
          "org.springframework.cloud.client.ServiceInstance"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getInstance",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getProperties",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.support.LoadBalancerEagerContextInitializer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.logging.LoggingRebinder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.sleuth$Tracer"
  },
  {
    "name": "org.springframework.cloud.sleuth.Tracer"
  },
  {
    "name": "org.springframework.cloud.util.ConditionalOnBootstrapDisabled",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.util.ConditionalOnBootstrapDisabled$OnBootstrapDisabledCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.util.ConditionalOnBootstrapEnabled",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.util.ConditionalOnBootstrapEnabled$OnBootstrapEnabledCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.util.random.CachedRandomPropertySourceEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.zookeeper.ConditionalOnZookeeperEnabled",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.zookeeper.discovery.ConditionalOnLoadBalancerForZookeeperEnabled",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.zookeeper.discovery.ConditionalOnZookeeperDiscoveryEnabled",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.zookeeper.discovery.configclient.ZookeeperConfigServerBootstrapper",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.zookeeper.discovery.dependency.ConditionalOnDependenciesPassed",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.zookeeper.discovery.dependency.DependenciesPassedCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.zookeeper.discovery.dependency.DependencyEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
  "name":"org.springframework.context.ApplicationContextAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.ApplicationEventPublisherAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.ApplicationListener",
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.ApplicationStartupAware",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.EmbeddedValueResolverAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.EnvironmentAware",
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods": true
},
  {
    "name": "org.springframework.context.Lifecycle",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.LifecycleProcessor",
    "queryAllDeclaredMethods": true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.ResourceLoaderAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.annotation.AnnotationScopeMetadataResolver",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.AspectJAutoProxyRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.AutoProxyRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.Bean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.CommonAnnotationBeanPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.ComponentScan",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ComponentScan$Filter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Conditional",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Configuration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.annotation.ConfigurationClassPostProcessor",
  "allDeclaredFields":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setMetadataReaderFactory","parameterTypes":["org.springframework.core.type.classreading.MetadataReaderFactory"] }]
},
{
  "name":"org.springframework.context.annotation.EnableAspectJAutoProxy",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Import",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ImportAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.annotation.ImportRuntimeHints",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Lazy",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Primary",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Role",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Scope",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.event.DefaultEventListenerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.event.EventListener",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.event.EventListenerMethodProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name": "org.springframework.context.event.SmartApplicationListener",
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods": true,
  "methods": [
    {
      "name": "getListenerId",
      "parameterTypes": []
    },
    {
      "name": "getOrder",
      "parameterTypes": []
    },
    {
      "name": "supportsSourceType",
      "parameterTypes": [
        "java.lang.Class"
      ]
    }
  ]
},
  {
    "name": "org.springframework.context.support.ApplicationObjectSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.support.DefaultLifecycleProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "onClose",
        "parameterTypes": []
      },
      {
        "name": "onRefresh",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      }
    ]
  },
  {
  "name":"org.springframework.context.support.PropertySourcesPlaceholderConfigurer",
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.weaving.LoadTimeWeaverAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.DecoratingProxy",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.core.Ordered",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.PriorityOrdered",
  "queryAllPublicMethods":true
},
{
  "name": "org.springframework.core.ReactiveAdapterRegistry",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "methods": [
    {
      "name": "close",
      "parameterTypes": []
    },
    {
      "name": "shutdown",
      "parameterTypes": []
    }
  ]
},
  {
  "name":"org.springframework.core.annotation.AliasFor",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.core.annotation.Order",
  "queryAllDeclaredMethods":true
},
{
  "name": "org.springframework.core.convert.ConversionService",
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods": true
},
  {
    "name": "org.springframework.core.convert.converter.ConverterRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.support.ConfigurableConversionService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.support.GenericConversionService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addConverter",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class",
          "org.springframework.core.convert.converter.Converter"
        ]
      },
      {
        "name": "addConverter",
        "parameterTypes": [
          "org.springframework.core.convert.converter.Converter"
        ]
      },
      {
        "name": "addConverter",
        "parameterTypes": [
          "org.springframework.core.convert.converter.GenericConverter"
        ]
      },
      {
        "name": "addConverterFactory",
        "parameterTypes": [
          "org.springframework.core.convert.converter.ConverterFactory"
        ]
      },
      {
        "name": "canBypassConvert",
        "parameterTypes": [
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "canConvert",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "canConvert",
        "parameterTypes": [
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Class"
        ]
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "removeConvertible",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
  "name":"org.springframework.core.io.Resource",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }, {"name":"from","parameterTypes":["java.lang.String"] }, {"name":"of","parameterTypes":["java.lang.String"] }, {"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.core.io.support.PropertiesLoaderSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setFileEncoding","parameterTypes":["java.lang.String"] }, {"name":"setIgnoreResourceNotFound","parameterTypes":["boolean"] }, {"name":"setLocalOverride","parameterTypes":["boolean"] }, {"name":"setLocation","parameterTypes":["org.springframework.core.io.Resource"] }, {"name":"setLocations","parameterTypes":["org.springframework.core.io.Resource[]"] }, {"name":"setProperties","parameterTypes":["java.util.Properties"] }, {"name":"setPropertiesArray","parameterTypes":["java.util.Properties[]"] }, {"name":"setPropertiesPersister","parameterTypes":["org.springframework.util.PropertiesPersister"] }]
},
{
  "name": "org.springframework.core.task.AsyncListenableTaskExecutor",
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods": true
},
  {
    "name": "org.springframework.core.task.AsyncTaskExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "submitCompletable",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submitCompletable",
        "parameterTypes": [
          "java.util.concurrent.Callable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.core.task.TaskExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
  "name":"org.springframework.core.type.classreading.MetadataReaderFactory",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory"] }, {"name":"from","parameterTypes":["org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory"] }, {"name":"of","parameterTypes":["org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory"] }, {"name":"valueOf","parameterTypes":["org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory"] }]
},
{
  "name":"org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.dao.support.PersistenceExceptionTranslator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.annotation.QueryAnnotation",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.cassandra.ReactiveSession"
},
{
  "name":"org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate"
},
{
  "name":"org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient"
},
{
  "name":"org.springframework.data.elasticsearch.repository.ElasticsearchRepository"
},
{
  "name":"org.springframework.data.envers.repository.config$EnableEnversRepositories"
},
{
  "name":"org.springframework.data.envers.repository.config.EnableEnversRepositories"
},
{
  "name":"org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration"
},
{
  "name":"org.springframework.data.jpa.mapping.JpaMetamodelMappingContext",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"findPersistentPropertyPaths","parameterTypes":["java.lang.Class","java.util.function.Predicate"] }, {"name":"hasPersistentEntityFor","parameterTypes":["java.lang.Class"] }, {"name":"toMappingContext","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.jpa.repository.JpaContext",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.jpa.repository.JpaRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"deleteAllByIdInBatch","parameterTypes":["java.lang.Iterable"] }, {"name":"deleteAllInBatch","parameterTypes":[] }, {"name":"deleteAllInBatch","parameterTypes":["java.lang.Iterable"] }, {"name":"deleteInBatch","parameterTypes":["java.lang.Iterable"] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Example"] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Example","org.springframework.data.domain.Sort"] }, {"name":"flush","parameterTypes":[] }, {"name":"getById","parameterTypes":["java.lang.Object"] }, {"name":"getOne","parameterTypes":["java.lang.Object"] }, {"name":"getReferenceById","parameterTypes":["java.lang.Object"] }, {"name":"saveAllAndFlush","parameterTypes":["java.lang.Iterable"] }, {"name":"saveAndFlush","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.data.jpa.repository.JpaSpecificationExecutor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"count","parameterTypes":["org.springframework.data.jpa.domain.Specification"] }, {"name":"delete","parameterTypes":["org.springframework.data.jpa.domain.Specification"] }, {"name":"exists","parameterTypes":["org.springframework.data.jpa.domain.Specification"] }, {"name":"findAll","parameterTypes":["org.springframework.data.jpa.domain.Specification"] }, {"name":"findAll","parameterTypes":["org.springframework.data.jpa.domain.Specification","org.springframework.data.domain.Pageable"] }, {"name":"findAll","parameterTypes":["org.springframework.data.jpa.domain.Specification","org.springframework.data.domain.Sort"] }, {"name":"findBy","parameterTypes":["org.springframework.data.jpa.domain.Specification","java.util.function.Function"] }, {"name":"findOne","parameterTypes":["org.springframework.data.jpa.domain.Specification"] }]
},
{
  "name":"org.springframework.data.jpa.repository.Query",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.jpa.repository.config.EnableJpaRepositories",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getObjectType","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension"
},
{
  "name":"org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension$JpaRepositoryRegistrationAotProcessor",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
{
  "name":"org.springframework.data.jpa.repository.support.CrudMethodMetadata",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.jpa.repository.support.DefaultJpaContext",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.jpa.repository.support.EntityManagerBeanDefinitionRegistrarPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": [
        "char"
      ]
    },
    {
      "name": "getExtensionId",
      "parameterTypes": []
    },
    {
      "name": "getRootObject",
      "parameterTypes": []
    }
  ]
},
{
  "name":"org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }, {"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"setEntityManager","parameterTypes":["jakarta.persistence.EntityManager"] }, {"name":"setEntityPathResolver","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, {"name":"setEscapeCharacter","parameterTypes":["char"] }, {"name":"setMappingContext","parameterTypes":["org.springframework.data.mapping.context.MappingContext"] }, {"name":"setQueryMethodFactory","parameterTypes":["org.springframework.data.jpa.repository.query.JpaQueryMethodFactory"] }]
},
{
  "name":"org.springframework.data.jpa.repository.support.JpaRepositoryImplementation",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.jpa.repository.support.SimpleJpaRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.data.jpa.repository.support.JpaEntityInformation","jakarta.persistence.EntityManager"] }, {"name":"count","parameterTypes":[] }, {"name":"count","parameterTypes":["org.springframework.data.domain.Example"] }, {"name":"count","parameterTypes":["org.springframework.data.jpa.domain.Specification"] }, {"name":"delete","parameterTypes":["java.lang.Object"] }, {"name":"delete","parameterTypes":["org.springframework.data.jpa.domain.Specification"] }, {"name":"deleteAll","parameterTypes":[] }, {"name":"deleteAll","parameterTypes":["java.lang.Iterable"] }, {"name":"deleteAllById","parameterTypes":["java.lang.Iterable"] }, {"name":"deleteAllByIdInBatch","parameterTypes":["java.lang.Iterable"] }, {"name":"deleteAllInBatch","parameterTypes":[] }, {"name":"deleteAllInBatch","parameterTypes":["java.lang.Iterable"] }, {"name":"deleteById","parameterTypes":["java.lang.Object"] }, {"name":"exists","parameterTypes":["org.springframework.data.domain.Example"] }, {"name":"exists","parameterTypes":["org.springframework.data.jpa.domain.Specification"] }, {"name":"existsById","parameterTypes":["java.lang.Object"] }, {"name":"findAll","parameterTypes":[] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Example"] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Example","org.springframework.data.domain.Pageable"] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Example","org.springframework.data.domain.Sort"] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Pageable"] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Sort"] }, {"name":"findAll","parameterTypes":["org.springframework.data.jpa.domain.Specification"] }, {"name":"findAll","parameterTypes":["org.springframework.data.jpa.domain.Specification","org.springframework.data.domain.Pageable"] }, {"name":"findAll","parameterTypes":["org.springframework.data.jpa.domain.Specification","org.springframework.data.domain.Sort"] }, {"name":"findAllById","parameterTypes":["java.lang.Iterable"] }, {"name":"findBy","parameterTypes":["org.springframework.data.domain.Example","java.util.function.Function"] }, {"name":"findBy","parameterTypes":["org.springframework.data.jpa.domain.Specification","java.util.function.Function"] }, {"name":"findById","parameterTypes":["java.lang.Object"] }, {"name":"findOne","parameterTypes":["org.springframework.data.domain.Example"] }, {"name":"findOne","parameterTypes":["org.springframework.data.jpa.domain.Specification"] }, {"name":"flush","parameterTypes":[] }, {"name":"getById","parameterTypes":["java.lang.Object"] }, {"name":"getOne","parameterTypes":["java.lang.Object"] }, {"name":"getReferenceById","parameterTypes":["java.lang.Object"] }, {"name":"save","parameterTypes":["java.lang.Object"] }, {"name":"saveAll","parameterTypes":["java.lang.Iterable"] }, {"name":"saveAllAndFlush","parameterTypes":["java.lang.Iterable"] }, {"name":"saveAndFlush","parameterTypes":["java.lang.Object"] }, {"name":"setEscapeCharacter","parameterTypes":["org.springframework.data.jpa.repository.query.EscapeCharacter"] }, {"name":"setRepositoryMethodMetadata","parameterTypes":["org.springframework.data.jpa.repository.support.CrudMethodMetadata"] }]
},
{
  "name":"org.springframework.data.jpa.util.HibernateProxyDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name": "org.springframework.data.jpa.util.JpaMetamodelCacheCleanup",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllDeclaredConstructors": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    },
    {
      "name": "destroy",
      "parameterTypes": []
    }
  ]
},
{
  "name":"org.springframework.data.ldap.repository.LdapRepository"
},
{
  "name":"org.springframework.data.mapping.PersistentPropertyAccessor"
},
{
  "name":"org.springframework.data.mapping.context.AbstractMappingContext",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"createPersistentProperty","parameterTypes":["org.springframework.data.mapping.model.Property","org.springframework.data.mapping.model.MutablePersistentEntity","org.springframework.data.mapping.model.SimpleTypeHolder"] }, {"name":"getManagedTypes","parameterTypes":[] }, {"name":"getPersistentEntities","parameterTypes":[] }, {"name":"getPersistentEntity","parameterTypes":["java.lang.Class"] }, {"name":"getPersistentEntity","parameterTypes":["org.springframework.data.mapping.PersistentProperty"] }, {"name":"getPersistentEntity","parameterTypes":["org.springframework.data.util.TypeInformation"] }, {"name":"getPersistentPropertyPath","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"getPersistentPropertyPath","parameterTypes":["org.springframework.data.mapping.PropertyPath"] }, {"name":"initialize","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }, {"name":"setInitialEntitySet","parameterTypes":["java.util.Set"] }, {"name":"setManagedTypes","parameterTypes":["org.springframework.data.domain.ManagedTypes"] }, {"name":"setSimpleTypeHolder","parameterTypes":["org.springframework.data.mapping.model.SimpleTypeHolder"] }, {"name":"setStrict","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.data.mapping.context.MappingContext",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.data.jpa.mapping.JpaMetamodelMappingContext"] }, {"name":"from","parameterTypes":["org.springframework.data.jpa.mapping.JpaMetamodelMappingContext"] }, {"name":"getPersistentEntity","parameterTypes":["org.springframework.data.mapping.PersistentProperty"] }, {"name":"getPersistentEntity","parameterTypes":["org.springframework.data.util.TypeInformation"] }, {"name":"getRequiredPersistentEntity","parameterTypes":["java.lang.Class"] }, {"name":"getRequiredPersistentEntity","parameterTypes":["org.springframework.data.mapping.PersistentProperty"] }, {"name":"getRequiredPersistentEntity","parameterTypes":["org.springframework.data.util.TypeInformation"] }, {"name":"of","parameterTypes":["org.springframework.data.jpa.mapping.JpaMetamodelMappingContext"] }, {"name":"valueOf","parameterTypes":["org.springframework.data.jpa.mapping.JpaMetamodelMappingContext"] }]
},
{
  "name":"org.springframework.data.querydsl.QuerydslPredicateExecutor"
},
{
  "name":"org.springframework.data.querydsl.ReactiveQuerydslPredicateExecutor"
},
{
  "name":"org.springframework.data.r2dbc.core.R2dbcEntityTemplate"
},
{
  "name":"org.springframework.data.redis.connection.ReactiveRedisConnectionFactory"
},
{
  "name":"org.springframework.data.redis.connection.RedisConnectionFactory"
},
{
  "name":"org.springframework.data.redis.core.RedisOperations"
},
{
  "name":"org.springframework.data.redis.repository.configuration.EnableRedisRepositories"
},
{
  "name":"org.springframework.data.repository.CrudRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"count","parameterTypes":[] }, {"name":"delete","parameterTypes":["java.lang.Object"] }, {"name":"deleteAll","parameterTypes":[] }, {"name":"deleteAll","parameterTypes":["java.lang.Iterable"] }, {"name":"deleteAllById","parameterTypes":["java.lang.Iterable"] }, {"name":"deleteById","parameterTypes":["java.lang.Object"] }, {"name":"existsById","parameterTypes":["java.lang.Object"] }, {"name":"findById","parameterTypes":["java.lang.Object"] }, {"name":"save","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.data.repository.ListCrudRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"findAll","parameterTypes":[] }, {"name":"findAllById","parameterTypes":["java.lang.Iterable"] }, {"name":"saveAll","parameterTypes":["java.lang.Iterable"] }]
},
{
  "name":"org.springframework.data.repository.ListPagingAndSortingRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"findAll","parameterTypes":["org.springframework.data.domain.Sort"] }]
},
{
  "name":"org.springframework.data.repository.NoRepositoryBean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.repository.PagingAndSortingRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"findAll","parameterTypes":["org.springframework.data.domain.Pageable"] }]
},
{
  "name":"org.springframework.data.repository.Repository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"getObject","parameterTypes":[] }, {"name":"getObjectType","parameterTypes":[] }, {"name":"isSingleton","parameterTypes":[] }]
},
{
  "name": "org.springframework.data.repository.config.RepositoryConfiguration",
  "queryAllDeclaredMethods": true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": [
        "org.springframework.data.repository.config.RepositoryConfigurationAdapter"
      ]
    },
    {
      "name": "from",
      "parameterTypes": [
        "org.springframework.data.repository.config.RepositoryConfigurationAdapter"
      ]
    },
    {
      "name": "of",
      "parameterTypes": [
        "org.springframework.data.repository.config.RepositoryConfigurationAdapter"
      ]
    },
    {
      "name": "valueOf",
      "parameterTypes": [
        "org.springframework.data.repository.config.RepositoryConfigurationAdapter"
      ]
    }
  ]
},
  {
    "name": "org.springframework.data.repository.config.RepositoryConfigurationAdapter",
    "methods": [
      {
        "name": "toRepositoryConfiguration",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.config.RepositoryRegistrationAotProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getConfigMap",
        "parameterTypes": []
      },
      {
        "name": "processAheadOfTime",
        "parameterTypes": [
          "org.springframework.beans.factory.support.RegisteredBean"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setConfigMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
  "name":"org.springframework.data.repository.core.NamedQueries",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"] }, {"name":"from","parameterTypes":["org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"] }, {"name":"of","parameterTypes":["org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"] }, {"name":"valueOf","parameterTypes":["org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"] }]
},
{
  "name":"org.springframework.data.repository.core.support.PropertiesBasedNamedQueries",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getQuery","parameterTypes":["java.lang.String"] }, {"name":"hasQuery","parameterTypes":["java.lang.String"] }, {"name":"toNamedQueries","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"iterator","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addRepositoryFactoryCustomizer","parameterTypes":["org.springframework.data.repository.core.support.RepositoryFactoryCustomizer"] }, {"name":"getEntityInformation","parameterTypes":[] }, {"name":"getObject","parameterTypes":[] }, {"name":"getObjectType","parameterTypes":[] }, {"name":"getPersistentEntity","parameterTypes":[] }, {"name":"getQueryMethods","parameterTypes":[] }, {"name":"getRepositoryInformation","parameterTypes":[] }, {"name":"isSingleton","parameterTypes":[] }, {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }, {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, {"name":"setCustomImplementation","parameterTypes":["java.lang.Object"] }, {"name":"setEvaluationContextProvider","parameterTypes":["org.springframework.data.repository.query.QueryMethodEvaluationContextProvider"] }, {"name":"setLazyInit","parameterTypes":["boolean"] }, {"name":"setNamedQueries","parameterTypes":["org.springframework.data.repository.core.NamedQueries"] }, {"name":"setQueryLookupStrategyKey","parameterTypes":["org.springframework.data.repository.query.QueryLookupStrategy$Key"] }, {"name":"setRepositoryBaseClass","parameterTypes":["java.lang.Class"] }, {"name":"setRepositoryFragments","parameterTypes":["org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments"] }]
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryFactoryInformation",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.util.List"] }, {"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"getObject","parameterTypes":[] }, {"name":"getObjectType","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.data.repository.core.support.TransactionalRepositoryFactoryBeanSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"setEnableDefaultTransactions","parameterTypes":["boolean"] }, {"name":"setTransactionManager","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.data.repository.query.QueryByExampleExecutor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"count","parameterTypes":["org.springframework.data.domain.Example"] }, {"name":"exists","parameterTypes":["org.springframework.data.domain.Example"] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Example","org.springframework.data.domain.Pageable"] }, {"name":"findBy","parameterTypes":["org.springframework.data.domain.Example","java.util.function.Function"] }, {"name":"findOne","parameterTypes":["org.springframework.data.domain.Example"] }]
},
{
  "name":"org.springframework.data.repository.query.QueryLookupStrategy$Key",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.repository.query.ReactiveQueryByExampleExecutor"
},
{
  "name":"org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration"
},
{
  "name":"org.springframework.data.spel.spi.EvaluationContextExtension",
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods": true,
  "methods": [
    {
      "name": "getFunctions",
      "parameterTypes": []
    },
    {
      "name": "getProperties",
      "parameterTypes": []
    }
  ]
},
  {
    "name": "org.springframework.data.spel.spi.ExtensionIdAware",
    "queryAllDeclaredMethods": true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.util.CustomCollections$EclipseCollections",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.util.CustomCollections$VavrCollections",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.util.CustomCollections.EclipseCollections"
},
{
  "name":"org.springframework.data.util.CustomCollections.VavrCollections"
},
{
  "name":"org.springframework.data.util.Streamable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"and","parameterTypes":["java.lang.Iterable"] }, {"name":"and","parameterTypes":["java.util.function.Supplier"] }, {"name":"and","parameterTypes":["org.springframework.data.util.Streamable"] }, {"name":"and","parameterTypes":["java.lang.Object[]"] }, {"name":"filter","parameterTypes":["java.util.function.Predicate"] }, {"name":"flatMap","parameterTypes":["java.util.function.Function"] }, {"name":"get","parameterTypes":[] }, {"name":"isEmpty","parameterTypes":[] }, {"name":"map","parameterTypes":["java.util.function.Function"] }, {"name":"stream","parameterTypes":[] }, {"name":"toList","parameterTypes":[] }, {"name":"toSet","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.web.PageableHandlerMethodArgumentResolver"
},
{
  "name": "org.springframework.format.FormatterRegistry",
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods": true
},
  {
    "name": "org.springframework.format.support.DefaultFormattingConversionService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.format.support.FormattingConversionService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addFormatter",
        "parameterTypes": [
          "org.springframework.format.Formatter"
        ]
      },
      {
        "name": "addFormatterForFieldAnnotation",
        "parameterTypes": [
          "org.springframework.format.AnnotationFormatterFactory"
        ]
      },
      {
        "name": "addFormatterForFieldType",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.format.Formatter"
        ]
      },
      {
        "name": "addFormatterForFieldType",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.format.Printer",
          "org.springframework.format.Parser"
        ]
      },
      {
        "name": "addParser",
        "parameterTypes": [
          "org.springframework.format.Parser"
        ]
      },
      {
        "name": "addPrinter",
        "parameterTypes": [
          "org.springframework.format.Printer"
        ]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": [
          "org.springframework.util.StringValueResolver"
        ]
      }
    ]
  },
  {
  "name":"org.springframework.hateoas.EntityModel"
},
{
  "name": "org.springframework.hateoas.Link"
},
  {
  "name":"org.springframework.http.ReactiveHttpInputMessage"
},
{
  "name": "org.springframework.http.client.ClientHttpRequestInterceptor",
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods": true
},
  {
  "name":"org.springframework.http.client.reactive.ClientHttpConnector"
},
{
  "name":"org.springframework.http.client.reactive.ReactorResourceFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"destroy","parameterTypes":[] }]
},
{
  "name": "org.springframework.http.codec.ClientCodecConfigurer"
},
  {
    "name": "org.springframework.http.codec.CodecConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.http.codec.ServerCodecConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
},
{
  "name":"org.springframework.http.codec.multipart.DefaultPartHttpMessageReader"
},
{
  "name": "org.springframework.http.codec.support.BaseCodecConfigurer",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true
},
  {
    "name": "org.springframework.http.codec.support.DefaultClientCodecConfigurer"
  },
  {
    "name": "org.springframework.http.codec.support.DefaultServerCodecConfigurer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "clone",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "customCodecs",
        "parameterTypes": []
      },
      {
        "name": "defaultCodecs",
        "parameterTypes": []
      },
      {
        "name": "getReaders",
        "parameterTypes": []
      },
      {
        "name": "getWriters",
        "parameterTypes": []
      },
      {
        "name": "registerDefaults",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
  "name":"org.springframework.http.converter.HttpMessageConverter"
},
{
  "name": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true
},
{
  "name": "org.springframework.http.server.reactive.HttpHandler",
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods": true
},
{
  "name":"org.springframework.instrument$InstrumentationSavingAgent"
},
{
  "name":"org.springframework.instrument.InstrumentationSavingAgent"
},
{
  "name":"org.springframework.integration.config.EnableIntegration"
},
{
  "name": "org.springframework.jdbc.core.JdbcOperations",
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods": true
},
  {
    "name": "org.springframework.jdbc.core.JdbcTemplate",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Collection",
          "int",
          "org.springframework.jdbc.core.ParameterizedPreparedStatementSetter"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "java.util.List"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "java.util.List",
          "int[]"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.BatchPreparedStatementSetter"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "call",
        "parameterTypes": [
          "org.springframework.jdbc.core.CallableStatementCreator",
          "java.util.List"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.CallableStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.jdbc.core.CallableStatementCreator",
          "org.springframework.jdbc.core.CallableStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.jdbc.core.ConnectionCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.jdbc.core.StatementCallback"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.ResultSetExtractor",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowCallbackHandler",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.support.KeyHolder"
        ]
      }
    ]
},
{
  "name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations",
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods": true
},
{
  "name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "methods": [
    {
      "name": "batchUpdate",
      "parameterTypes": [
        "java.lang.String",
        "java.util.Map[]"
      ]
    },
    {
      "name": "batchUpdate",
      "parameterTypes": [
        "java.lang.String",
        "org.springframework.jdbc.core.namedparam.SqlParameterSource[]"
      ]
    },
    {
      "name": "close",
      "parameterTypes": []
    },
    {
      "name": "execute",
      "parameterTypes": [
        "java.lang.String",
        "java.util.Map",
        "org.springframework.jdbc.core.PreparedStatementCallback"
      ]
    },
    {
      "name": "execute",
      "parameterTypes": [
        "java.lang.String",
        "org.springframework.jdbc.core.PreparedStatementCallback"
      ]
    },
    {
      "name": "execute",
      "parameterTypes": [
        "java.lang.String",
        "org.springframework.jdbc.core.namedparam.SqlParameterSource",
        "org.springframework.jdbc.core.PreparedStatementCallback"
      ]
    },
    {
      "name": "getJdbcOperations",
      "parameterTypes": []
    },
    {
      "name": "query",
      "parameterTypes": [
        "java.lang.String",
        "java.util.Map",
        "org.springframework.jdbc.core.ResultSetExtractor"
      ]
    },
    {
      "name": "query",
      "parameterTypes": [
        "java.lang.String",
        "java.util.Map",
        "org.springframework.jdbc.core.RowCallbackHandler"
      ]
    },
    {
      "name": "query",
      "parameterTypes": [
        "java.lang.String",
        "java.util.Map",
        "org.springframework.jdbc.core.RowMapper"
      ]
    },
    {
      "name": "query",
      "parameterTypes": [
        "java.lang.String",
        "org.springframework.jdbc.core.ResultSetExtractor"
      ]
    },
    {
      "name": "query",
      "parameterTypes": [
        "java.lang.String",
        "org.springframework.jdbc.core.RowCallbackHandler"
      ]
    },
    {
      "name": "query",
      "parameterTypes": [
        "java.lang.String",
        "org.springframework.jdbc.core.RowMapper"
      ]
    },
    {
      "name": "query",
      "parameterTypes": [
        "java.lang.String",
        "org.springframework.jdbc.core.namedparam.SqlParameterSource",
        "org.springframework.jdbc.core.ResultSetExtractor"
      ]
    },
    {
      "name": "query",
      "parameterTypes": [
        "java.lang.String",
        "org.springframework.jdbc.core.namedparam.SqlParameterSource",
        "org.springframework.jdbc.core.RowCallbackHandler"
      ]
    },
    {
      "name": "query",
      "parameterTypes": [
        "java.lang.String",
        "org.springframework.jdbc.core.namedparam.SqlParameterSource",
        "org.springframework.jdbc.core.RowMapper"
      ]
    },
    {
      "name": "queryForList",
      "parameterTypes": [
        "java.lang.String",
        "java.util.Map"
      ]
    },
    {
      "name": "queryForList",
      "parameterTypes": [
        "java.lang.String",
        "java.util.Map",
        "java.lang.Class"
      ]
    },
    {
      "name": "queryForList",
      "parameterTypes": [
        "java.lang.String",
        "org.springframework.jdbc.core.namedparam.SqlParameterSource"
      ]
    },
    {
      "name": "queryForList",
      "parameterTypes": [
        "java.lang.String",
        "org.springframework.jdbc.core.namedparam.SqlParameterSource",
        "java.lang.Class"
      ]
    },
    {
      "name": "queryForMap",
      "parameterTypes": [
        "java.lang.String",
        "java.util.Map"
      ]
    },
    {
      "name": "queryForMap",
      "parameterTypes": [
        "java.lang.String",
        "org.springframework.jdbc.core.namedparam.SqlParameterSource"
      ]
    },
    {
      "name": "queryForObject",
      "parameterTypes": [
        "java.lang.String",
        "java.util.Map",
        "java.lang.Class"
      ]
    },
    {
      "name": "queryForObject",
      "parameterTypes": [
        "java.lang.String",
        "java.util.Map",
        "org.springframework.jdbc.core.RowMapper"
      ]
    },
    {
      "name": "queryForObject",
      "parameterTypes": [
        "java.lang.String",
        "org.springframework.jdbc.core.namedparam.SqlParameterSource",
        "java.lang.Class"
      ]
    },
    {
      "name": "queryForObject",
      "parameterTypes": [
        "java.lang.String",
        "org.springframework.jdbc.core.namedparam.SqlParameterSource",
        "org.springframework.jdbc.core.RowMapper"
      ]
    },
    {
      "name": "queryForRowSet",
      "parameterTypes": [
        "java.lang.String",
        "java.util.Map"
      ]
    },
    {
      "name": "queryForRowSet",
      "parameterTypes": [
        "java.lang.String",
        "org.springframework.jdbc.core.namedparam.SqlParameterSource"
      ]
    },
    {
      "name": "queryForStream",
      "parameterTypes": [
        "java.lang.String",
        "java.util.Map",
        "org.springframework.jdbc.core.RowMapper"
      ]
    },
    {
      "name": "queryForStream",
      "parameterTypes": [
        "java.lang.String",
        "org.springframework.jdbc.core.namedparam.SqlParameterSource",
        "org.springframework.jdbc.core.RowMapper"
      ]
    },
    {
      "name": "shutdown",
      "parameterTypes": []
    },
    {
      "name": "update",
      "parameterTypes": [
        "java.lang.String",
        "java.util.Map"
      ]
    },
    {
      "name": "update",
      "parameterTypes": [
        "java.lang.String",
        "org.springframework.jdbc.core.namedparam.SqlParameterSource"
      ]
    },
    {
      "name": "update",
      "parameterTypes": [
        "java.lang.String",
        "org.springframework.jdbc.core.namedparam.SqlParameterSource",
        "org.springframework.jdbc.support.KeyHolder"
      ]
    },
    {
      "name": "update",
      "parameterTypes": [
        "java.lang.String",
        "org.springframework.jdbc.core.namedparam.SqlParameterSource",
        "org.springframework.jdbc.support.KeyHolder",
        "java.lang.String[]"
      ]
    }
  ]
},
{
  "name":"org.springframework.jdbc.datasource.DelegatingDataSource"
},
{
  "name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType"
},
{
  "name":"org.springframework.jdbc.datasource.init.DatabasePopulator"
},
{
  "name": "org.springframework.jdbc.support.JdbcAccessor",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "methods": [
    {
      "name": "afterPropertiesSet",
      "parameterTypes": []
    },
    {
      "name": "getDataSource",
      "parameterTypes": []
    },
    {
      "name": "getExceptionTranslator",
      "parameterTypes": []
    },
    {
      "name": "isLazyInit",
      "parameterTypes": []
    },
    {
      "name": "setDataSource",
      "parameterTypes": [
        "javax.sql.DataSource"
      ]
    },
    {
      "name": "setDatabaseProductName",
      "parameterTypes": [
        "java.lang.String"
      ]
    },
    {
      "name": "setExceptionTranslator",
      "parameterTypes": [
        "org.springframework.jdbc.support.SQLExceptionTranslator"
      ]
    },
    {
      "name": "setLazyInit",
      "parameterTypes": [
        "boolean"
      ]
    }
  ]
},
  {
  "name":"org.springframework.jms.core.JmsTemplate"
},
{
  "name":"org.springframework.jmx.export.MBeanExporter"
},
{
  "name": "org.springframework.jmx.export.annotation.ManagedAttribute",
  "queryAllDeclaredMethods": true
},
  {
    "name": "org.springframework.jmx.export.annotation.ManagedOperation",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.jmx.export.annotation.ManagedResource",
    "queryAllDeclaredMethods": true
  },
  {
  "name":"org.springframework.jndi.JndiObjectFactoryBean"
},
{
  "name":"org.springframework.kafka.core.KafkaTemplate"
},
{
  "name":"org.springframework.lang.NonNullApi"
},
{
  "name":"org.springframework.lang.Nullable"
},
{
  "name":"org.springframework.ldap.core.ContextSource"
},
{
  "name":"org.springframework.mail.javamail.JavaMailSenderImpl"
},
{
  "name":"org.springframework.orm.jpa.AbstractEntityManagerFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"createNativeEntityManager","parameterTypes":["java.util.Map"] }, {"name":"destroy","parameterTypes":[] }, {"name":"getBeanClassLoader","parameterTypes":[] }, {"name":"getBootstrapExecutor","parameterTypes":[] }, {"name":"getEntityManagerInterface","parameterTypes":[] }, {"name":"getJpaDialect","parameterTypes":[] }, {"name":"getJpaPropertyMap","parameterTypes":[] }, {"name":"getJpaVendorAdapter","parameterTypes":[] }, {"name":"getNativeEntityManagerFactory","parameterTypes":[] }, {"name":"getObject","parameterTypes":[] }, {"name":"getObjectType","parameterTypes":[] }, {"name":"getPersistenceProvider","parameterTypes":[] }, {"name":"isSingleton","parameterTypes":[] }, {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"setBeanName","parameterTypes":["java.lang.String"] }, {"name":"setBootstrapExecutor","parameterTypes":["org.springframework.core.task.AsyncTaskExecutor"] }, {"name":"setEntityManagerFactoryInterface","parameterTypes":["java.lang.Class"] }, {"name":"setEntityManagerInitializer","parameterTypes":["java.util.function.Consumer"] }, {"name":"setEntityManagerInterface","parameterTypes":["java.lang.Class"] }, {"name":"setJpaDialect","parameterTypes":["org.springframework.orm.jpa.JpaDialect"] }, {"name":"setJpaProperties","parameterTypes":["java.util.Properties"] }, {"name":"setJpaPropertyMap","parameterTypes":["java.util.Map"] }, {"name":"setJpaVendorAdapter","parameterTypes":["org.springframework.orm.jpa.JpaVendorAdapter"] }, {"name":"setPersistenceProvider","parameterTypes":["jakarta.persistence.spi.PersistenceProvider"] }, {"name":"setPersistenceProviderClass","parameterTypes":["java.lang.Class"] }, {"name":"translateExceptionIfPossible","parameterTypes":["java.lang.RuntimeException"] }]
},
{
  "name":"org.springframework.orm.jpa.EntityManagerFactoryInfo",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
    {
      "name": "getBeanClassLoader",
      "parameterTypes": []
    },
    {
      "name": "getDataSource",
      "parameterTypes": []
    },
    {
      "name": "getEntityManagerInterface",
      "parameterTypes": []
    },
    {
      "name": "getJpaDialect",
      "parameterTypes": []
    }
  ]
},
{
  "name":"org.springframework.orm.jpa.EntityManagerProxy",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name": "org.springframework.orm.jpa.JpaTransactionManager",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "methods": [
    {
      "name": "afterPropertiesSet",
      "parameterTypes": []
    },
    {
      "name": "close",
      "parameterTypes": []
    },
    {
      "name": "getResourceFactory",
      "parameterTypes": []
    },
    {
      "name": "setBeanFactory",
      "parameterTypes": [
        "org.springframework.beans.factory.BeanFactory"
      ]
    },
    {
      "name": "shutdown",
      "parameterTypes": []
    }
  ]
},
  {
  "name":"org.springframework.orm.jpa.JpaVendorAdapter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"getDataSource","parameterTypes":[] }, {"name":"getPersistenceUnitInfo","parameterTypes":[] }, {"name":"getPersistenceUnitName","parameterTypes":[] }, {"name":"setLoadTimeWeaver","parameterTypes":["org.springframework.instrument.classloading.LoadTimeWeaver"] }, {"name":"setPersistenceUnitName","parameterTypes":["java.lang.String"] }, {"name":"setResourceLoader","parameterTypes":["org.springframework.core.io.ResourceLoader"] }]
},
{
  "name":"org.springframework.orm.jpa.SharedEntityManagerCreator",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"createSharedEntityManager","parameterTypes":["jakarta.persistence.EntityManagerFactory"] }]
},
{
  "name":"org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.orm.jpa.persistenceunit.SimplePersistenceManagedTypes",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getManagedClassNames","parameterTypes":[] }, {"name":"getManagedPackages","parameterTypes":[] }, {"name":"getPersistenceUnitRootUrl","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.orm.jpa.vendor.AbstractJpaVendorAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"postProcessEntityManager","parameterTypes":["jakarta.persistence.EntityManager"] }, {"name":"postProcessEntityManagerFactory","parameterTypes":["jakarta.persistence.EntityManagerFactory"] }, {"name":"setDatabase","parameterTypes":["org.springframework.orm.jpa.vendor.Database"] }, {"name":"setDatabasePlatform","parameterTypes":["java.lang.String"] }, {"name":"setGenerateDdl","parameterTypes":["boolean"] }, {"name":"setShowSql","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getEntityManagerFactoryInterface","parameterTypes":[] }, {"name":"getEntityManagerInterface","parameterTypes":[] }, {"name":"getJpaDialect","parameterTypes":[] }, {"name":"getJpaPropertyMap","parameterTypes":[] }, {"name":"getJpaPropertyMap","parameterTypes":["jakarta.persistence.spi.PersistenceUnitInfo"] }, {"name":"getPersistenceProvider","parameterTypes":[] }, {"name":"getPersistenceProviderRootPackage","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.oxm.Marshaller"
},
{
  "name":"org.springframework.r2dbc.connection.R2dbcTransactionManager"
},
{
  "name":"org.springframework.r2dbc.connection.init.DatabasePopulator"
},
{
  "name": "org.springframework.retry.support.RetryTemplate"
},
  {
    "name": "org.springframework.scheduling.SchedulingTaskExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "prefersShortLivedTasks",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.TaskScheduler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "schedule",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.util.Date"
        ]
      },
      {
        "name": "scheduleAtFixedRate",
        "parameterTypes": [
          "java.lang.Runnable",
          "long"
        ]
      },
      {
        "name": "scheduleAtFixedRate",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.util.Date",
          "long"
        ]
      },
      {
        "name": "scheduleWithFixedDelay",
        "parameterTypes": [
          "java.lang.Runnable",
          "long"
        ]
      },
      {
        "name": "scheduleWithFixedDelay",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.util.Date",
          "long"
        ]
      }
    ]
},
{
  "name":"org.springframework.scheduling.annotation.Async",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.scheduling.annotation.EnableScheduling",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.scheduling.annotation.Scheduled",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"requiresDestruction","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.scheduling.annotation.Schedules",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.scheduling.annotation.SchedulingConfiguration",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"scheduledAnnotationProcessor","parameterTypes":[] }]
},
{
  "name":"org.springframework.scheduling.annotation.SchedulingConfigurer"
},
{
  "name": "org.springframework.scheduling.concurrent.CustomizableThreadFactory",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "methods": [
    {
      "name": "newThread",
      "parameterTypes": [
        "java.lang.Runnable"
      ]
    }
  ]
},
  {
    "name": "org.springframework.scheduling.concurrent.ExecutorConfigurationSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "initialize",
        "parameterTypes": []
      },
      {
        "name": "setAwaitTerminationMillis",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setAwaitTerminationSeconds",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRejectedExecutionHandler",
        "parameterTypes": [
          "java.util.concurrent.RejectedExecutionHandler"
        ]
      },
      {
        "name": "setThreadFactory",
        "parameterTypes": [
          "java.util.concurrent.ThreadFactory"
        ]
      },
      {
        "name": "setThreadNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWaitForTasksToCompleteOnShutdown",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
  "name":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
},
{
  "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "methods": [
    {
      "name": "execute",
      "parameterTypes": [
        "java.lang.Runnable"
      ]
    },
    {
      "name": "execute",
      "parameterTypes": [
        "java.lang.Runnable",
        "long"
      ]
    },
    {
      "name": "getClock",
      "parameterTypes": []
    },
    {
      "name": "schedule",
      "parameterTypes": [
        "java.lang.Runnable",
        "java.time.Instant"
      ]
    },
    {
      "name": "schedule",
      "parameterTypes": [
        "java.lang.Runnable",
        "org.springframework.scheduling.Trigger"
      ]
    },
    {
      "name": "scheduleAtFixedRate",
      "parameterTypes": [
        "java.lang.Runnable",
        "java.time.Duration"
      ]
    },
    {
      "name": "scheduleAtFixedRate",
      "parameterTypes": [
        "java.lang.Runnable",
        "java.time.Instant",
        "java.time.Duration"
      ]
    },
    {
      "name": "scheduleWithFixedDelay",
      "parameterTypes": [
        "java.lang.Runnable",
        "java.time.Duration"
      ]
    },
    {
      "name": "scheduleWithFixedDelay",
      "parameterTypes": [
        "java.lang.Runnable",
        "java.time.Instant",
        "java.time.Duration"
      ]
    },
    {
      "name": "submit",
      "parameterTypes": [
        "java.lang.Runnable"
      ]
    },
    {
      "name": "submit",
      "parameterTypes": [
        "java.util.concurrent.Callable"
      ]
    },
    {
      "name": "submitListenable",
      "parameterTypes": [
        "java.lang.Runnable"
      ]
    },
    {
      "name": "submitListenable",
      "parameterTypes": [
        "java.util.concurrent.Callable"
      ]
    }
  ]
},
{
  "name":"org.springframework.scheduling.config.ScheduledTaskHolder",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.authentication.AuthenticationManager"
},
{
  "name":"org.springframework.security.authentication.DefaultAuthenticationEventPublisher"
},
{
  "name":"org.springframework.security.authentication.ReactiveAuthenticationManager"
},
{
  "name":"org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"
},
{
  "name":"org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity"
},
{
  "name":"org.springframework.security.config.http.SessionCreationPolicy"
},
{
  "name": "org.springframework.security.crypto.encrypt.TextEncryptor"
},
  {
  "name":"org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken"
},
{
  "name": "org.springframework.security.rsa.crypto.RsaSecretEncryptor"
},
  {
  "name":"org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor"
},
{
  "name":"org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository"
},
{
  "name":"org.springframework.session.Session"
},
{
  "name":"org.springframework.stereotype.Component",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.stereotype.Controller",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.stereotype.Indexed",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.stereotype.Repository",
  "queryAllDeclaredMethods":true
},
{
  "name": "org.springframework.transaction.PlatformTransactionManager",
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods": true
},
{
  "name":"org.springframework.transaction.ReactiveTransactionManager"
},
{
  "name":"org.springframework.transaction.TransactionDefinition",
  "allPublicFields": true,
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods": true
},
{
  "name": "org.springframework.transaction.TransactionManager",
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods": true
},
{
  "name":"org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setImportMetadata","parameterTypes":["org.springframework.core.type.AnnotationMetadata"] }, {"name":"transactionalEventListenerFactory","parameterTypes":[] }]
},
{
  "name":"org.springframework.transaction.annotation.AnnotationTransactionAttributeSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"isCandidateClass","parameterTypes":["java.lang.Class"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.transaction.annotation.EnableTransactionManagement",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"transactionAdvisor","parameterTypes":["org.springframework.transaction.interceptor.TransactionAttributeSource","org.springframework.transaction.interceptor.TransactionInterceptor"] }, {"name":"transactionAttributeSource","parameterTypes":[] }, {"name":"transactionInterceptor","parameterTypes":["org.springframework.transaction.interceptor.TransactionAttributeSource"] }]
},
{
  "name":"org.springframework.transaction.annotation.TransactionManagementConfigurationSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.transaction.annotation.TransactionRuntimeHints"
},
{
  "name":"org.springframework.transaction.annotation.Transactional",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.transaction.aspectj.AbstractTransactionAspect"
},
{
  "name":"org.springframework.transaction.event.TransactionalEventListenerFactory",
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getTransactionAttribute","parameterTypes":["java.lang.reflect.Method","java.lang.Class"] }, {"name":"setEmbeddedValueResolver","parameterTypes":["org.springframework.util.StringValueResolver"] }]
},
{
  "name":"org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getPointcut","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.transaction.interceptor.TransactionAspectSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"getTransactionAttributeSource","parameterTypes":[] }, {"name":"getTransactionManager","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"setTransactionAttributeSource","parameterTypes":["org.springframework.transaction.interceptor.TransactionAttributeSource"] }, {"name":"setTransactionAttributeSources","parameterTypes":["org.springframework.transaction.interceptor.TransactionAttributeSource[]"] }, {"name":"setTransactionAttributes","parameterTypes":["java.util.Properties"] }, {"name":"setTransactionManager","parameterTypes":["org.springframework.transaction.TransactionManager"] }, {"name":"setTransactionManagerBeanName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.transaction.interceptor.TransactionAttributeSource",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.transaction.interceptor.TransactionInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"invoke","parameterTypes":["org.aopalliance.intercept.MethodInvocation"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.transaction.interceptor.TransactionalProxy",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.transaction.jta.JtaTransactionManager"
},
{
  "name": "org.springframework.transaction.support.AbstractPlatformTransactionManager",
  "allDeclaredFields": true,
  "allPublicFields": true,
  "queryAllDeclaredMethods": true,
  "methods": [
    {
      "name": "commit",
      "parameterTypes": [
        "org.springframework.transaction.TransactionStatus"
      ]
    },
    {
      "name": "getTransaction",
      "parameterTypes": [
        "org.springframework.transaction.TransactionDefinition"
      ]
    },
    {
      "name": "rollback",
      "parameterTypes": [
        "org.springframework.transaction.TransactionStatus"
      ]
    }
  ]
},
  {
    "name": "org.springframework.transaction.support.DefaultTransactionDefinition",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getIsolationLevel",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPropagationBehavior",
        "parameterTypes": []
      },
      {
        "name": "getTimeout",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.transaction.support.ResourceTransactionManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.support.TransactionOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "executeWithoutResult",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.support.TransactionTemplate",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.transaction.support.TransactionCallback"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
},
{
  "name":"org.springframework.util.Assert"
},
{
  "name": "org.springframework.util.CustomizableThreadCreator",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "methods": [
    {
      "name": "createThread",
      "parameterTypes": [
        "java.lang.Runnable"
      ]
    },
    {
      "name": "getThreadGroup",
      "parameterTypes": []
    },
    {
      "name": "getThreadNamePrefix",
      "parameterTypes": []
    },
    {
      "name": "getThreadPriority",
      "parameterTypes": []
    },
    {
      "name": "isDaemon",
      "parameterTypes": []
    },
    {
      "name": "setDaemon",
      "parameterTypes": [
        "boolean"
      ]
    },
    {
      "name": "setThreadGroup",
      "parameterTypes": [
        "java.lang.ThreadGroup"
      ]
    },
    {
      "name": "setThreadGroupName",
      "parameterTypes": [
        "java.lang.String"
      ]
    },
    {
      "name": "setThreadPriority",
      "parameterTypes": [
        "int"
      ]
    }
  ]
},
  {
    "name": "org.springframework.validation.Validator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
  "name":"org.springframework.web.bind.annotation.Mapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.RequestMapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.ResponseBody",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.RestController",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.client.RestTemplate"
},
{
  "name":"org.springframework.web.context.support.GenericWebApplicationContext"
},
{
  "name": "org.springframework.web.cors.reactive.PreFlightRequestHandler",
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods": true
},
  {
  "name":"org.springframework.web.filter.CharacterEncodingFilter"
},
{
  "name": "org.springframework.web.reactive.DispatchExceptionHandler",
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods": true
},
  {
    "name": "org.springframework.web.reactive.DispatcherHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "handlePreFlight",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.HandlerAdapter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.reactive.HandlerMapping",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
},
{
  "name":"org.springframework.web.reactive.HandlerResult"
},
{
  "name": "org.springframework.web.reactive.HandlerResultHandler",
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods": true
},
  {
    "name": "org.springframework.web.reactive.accept.RequestedContentTypeResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
  "name":"org.springframework.web.reactive.config.DelegatingWebFluxConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "configurePathMatching",
        "parameterTypes": [
          "org.springframework.web.reactive.config.PathMatchConfigurer"
        ]
      },
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
},
{
  "name":"org.springframework.web.reactive.config.WebFluxConfigurationSupport",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "methods": [
    {
      "name": "handlerFunctionAdapter",
      "parameterTypes": []
    },
    {
      "name": "requestMappingHandlerAdapter",
      "parameterTypes": [
        "org.springframework.core.ReactiveAdapterRegistry",
        "org.springframework.http.codec.ServerCodecConfigurer",
        "org.springframework.format.support.FormattingConversionService",
        "org.springframework.validation.Validator"
      ]
    },
    {
      "name": "requestMappingHandlerMapping",
      "parameterTypes": [
        "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
      ]
    },
    {
      "name": "resourceHandlerMapping",
      "parameterTypes": [
        "org.springframework.web.reactive.resource.ResourceUrlProvider"
      ]
    },
    {
      "name": "resourceUrlProvider",
      "parameterTypes": []
    },
    {
      "name": "responseBodyResultHandler",
      "parameterTypes": [
        "org.springframework.core.ReactiveAdapterRegistry",
        "org.springframework.http.codec.ServerCodecConfigurer",
        "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
      ]
    },
    {
      "name": "responseEntityResultHandler",
      "parameterTypes": [
        "org.springframework.core.ReactiveAdapterRegistry",
        "org.springframework.http.codec.ServerCodecConfigurer",
        "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
      ]
    },
    {
      "name": "responseStatusExceptionHandler",
      "parameterTypes": []
    },
    {
      "name": "routerFunctionMapping",
      "parameterTypes": [
        "org.springframework.http.codec.ServerCodecConfigurer"
      ]
    },
    {
      "name": "serverCodecConfigurer",
      "parameterTypes": []
    },
    {
      "name": "serverResponseResultHandler",
      "parameterTypes": [
        "org.springframework.http.codec.ServerCodecConfigurer"
      ]
    },
    {
      "name": "setApplicationContext",
      "parameterTypes": [
        "org.springframework.context.ApplicationContext"
      ]
    },
    {
      "name": "simpleHandlerAdapter",
      "parameterTypes": []
    },
    {
      "name": "viewResolutionResultHandler",
      "parameterTypes": [
        "org.springframework.core.ReactiveAdapterRegistry",
        "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
      ]
    },
    {
      "name": "webFluxAdapterRegistry",
      "parameterTypes": []
    },
    {
      "name": "webFluxContentTypeResolver",
      "parameterTypes": []
    },
    {
      "name": "webFluxWebSocketHandlerAdapter",
      "parameterTypes": []
    },
    {
      "name": "webHandler",
      "parameterTypes": []
    }
  ]
},
  {
    "name": "org.springframework.web.reactive.config.WebFluxConfigurationSupport$NoOpValidator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.validation.Errors"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.config.WebFluxConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "addCorsMappings",
        "parameterTypes": [
          "org.springframework.web.reactive.config.CorsRegistry"
        ]
      },
      {
        "name": "configureContentTypeResolver",
        "parameterTypes": [
          "org.springframework.web.reactive.accept.RequestedContentTypeResolverBuilder"
        ]
      },
      {
        "name": "configurePathMatching",
        "parameterTypes": [
          "org.springframework.web.reactive.config.PathMatchConfigurer"
        ]
      },
      {
        "name": "getMessageCodesResolver",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "getWebSocketService",
        "parameterTypes": []
      }
    ]
},
{
  "name": "org.springframework.web.reactive.function.client.ExchangeFilterFunction",
  "queryAllDeclaredMethods": true,
  "queryAllPublicMethods": true,
  "methods": [
    {
      "name": "andThen",
      "parameterTypes": [
        "org.springframework.web.reactive.function.client.ExchangeFilterFunction"
      ]
    },
    {
      "name": "apply",
      "parameterTypes": [
        "org.springframework.web.reactive.function.client.ExchangeFunction"
      ]
    }
  ]
},
{
  "name":"org.springframework.web.reactive.function.client.WebClient"
},
{
  "name":"org.springframework.web.reactive.function.client.WebClient$Builder"
},
{
  "name": "org.springframework.web.reactive.function.server.HandlerFunction",
  "methods": [
    {
      "name": "handle",
      "parameterTypes": [
        "org.springframework.web.reactive.function.server.ServerRequest"
      ]
    }
  ]
},
  {
    "name": "org.springframework.web.reactive.function.server.support.HandlerFunctionAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "java.lang.Object"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.function.server.support.RouterFunctionMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.function.server.support.ServerResponseResultHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "handleResult",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "org.springframework.web.reactive.HandlerResult"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "supports",
        "parameterTypes": [
          "org.springframework.web.reactive.HandlerResult"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.handler.AbstractHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getCorsProcessor",
        "parameterTypes": []
      },
      {
        "name": "getHandler",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "getPathPatternParser",
        "parameterTypes": []
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCorsConfigurationSource",
        "parameterTypes": [
          "org.springframework.web.cors.reactive.CorsConfigurationSource"
        ]
      },
      {
        "name": "setCorsConfigurations",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setCorsProcessor",
        "parameterTypes": [
          "org.springframework.web.cors.reactive.CorsProcessor"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setUseCaseSensitiveMatch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseTrailingSlashMatch",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.handler.AbstractUrlHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getHandlerInternal",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "setHandlerPredicate",
        "parameterTypes": [
          "java.util.function.BiPredicate"
        ]
      },
      {
        "name": "setLazyInitHandlers",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.handler.SimpleUrlHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.handler.WebFluxResponseStatusExceptionHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.resource.ResourceUrlProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.HandlerResultHandlerSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getAdapterRegistry",
        "parameterTypes": []
      },
      {
        "name": "getContentTypeResolver",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.SimpleHandlerAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "java.lang.Object"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getDirectPaths",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getHandlerMethods",
        "parameterTypes": []
      },
      {
        "name": "getMatchingMapping",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "handleMatch",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.web.method.HandlerMethod",
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "initCorsConfiguration",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerHandlerMethod",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerMapping",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.reflect.Method"
        ]
      },
      {
        "name": "unregisterMapping",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping$PreFlightAmbiguousMatchHandler",
    "methods": [
      {
        "name": "handle",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.RequestMappingInfoHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getHandlerInternal",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "initCorsConfiguration",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerHandlerMethod",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerMapping",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.reflect.Method"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler",
    "methods": [
      {
        "name": "handle",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.annotation.AbstractMessageWriterResultHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getMessageWriters",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "java.lang.Object"
        ]
      },
      {
        "name": "handleError",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "registerMapping",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.reflect.Method"
        ]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": [
          "org.springframework.util.StringValueResolver"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "handleResult",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "org.springframework.web.reactive.HandlerResult"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "supports",
        "parameterTypes": [
          "org.springframework.web.reactive.HandlerResult"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.annotation.ResponseEntityResultHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "handleResult",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "org.springframework.web.reactive.HandlerResult"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "supports",
        "parameterTypes": [
          "org.springframework.web.reactive.HandlerResult"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.view.ViewResolutionResultHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "handleResult",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "org.springframework.web.reactive.HandlerResult"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "supports",
        "parameterTypes": [
          "org.springframework.web.reactive.HandlerResult"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.socket.server.support.WebSocketHandlerAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "java.lang.Object"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.server.WebExceptionHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.server.WebHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
},
{
  "name": "org.springframework.web.server.adapter.HttpWebHandlerAdapter",
  "allDeclaredFields": true,
  "queryAllDeclaredMethods": true,
  "methods": [
    {
      "name": "close",
      "parameterTypes": []
    },
    {
      "name": "handle",
      "parameterTypes": [
        "org.springframework.http.server.reactive.ServerHttpRequest",
        "org.springframework.http.server.reactive.ServerHttpResponse"
      ]
    },
    {
      "name": "shutdown",
      "parameterTypes": []
    }
  ]
},
  {
    "name": "org.springframework.web.server.handler.ResponseStatusExceptionHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "setWarnLogCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.server.handler.WebHandlerDecorator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getDelegate",
        "parameterTypes": []
      },
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.server.i18n.AcceptHeaderLocaleContextResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "resolveLocaleContext",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "setLocaleContext",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "org.springframework.context.i18n.LocaleContext"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.server.i18n.LocaleContextResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.server.session.CookieWebSessionIdResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "expireSession",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "resolveSessionIds",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "setSessionId",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "java.lang.String"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.server.session.DefaultWebSessionManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getSession",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.server.session.WebSessionIdResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.server.session.WebSessionManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
},
{
  "name":"org.springframework.web.servlet$DispatcherServlet"
},
{
  "name":"org.springframework.web.servlet.DispatcherServlet"
},
{
  "name":"org.springframework.web.servlet.config.annotation.WebMvcConfigurer"
},
{
  "name":"org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer"
},
{
  "name":"org.springframework.ws.transport.http.MessageDispatcherServlet"
},
{
  "name": "org.synchronoss.cloud.nio.multipart$NioMultipartParser"
},
  {
    "name": "org.synchronoss.cloud.nio.multipart.NioMultipartParser"
  },
  {
    "name": "org.thymeleaf.spring6$SpringTemplateEngine"
  },
  {
  "name":"org.thymeleaf.spring6.SpringTemplateEngine"
},
{
  "name":"org.webjars$WebJarAssetLocator"
},
{
  "name":"org.webjars.WebJarAssetLocator"
},
{
  "name":"org.xnio.SslClientAuthMode"
},
{
  "name":"org.yaml.snakeyaml.Yaml"
},
{
  "name":"reactor.core.publisher.Flux"
},
{
  "name":"reactor.core.publisher.Mono"
},
{
  "name":"reactor.core.publisher.MonoCacheTime",
  "fields":[{"name":"state"}]
},
{
  "name": "reactor.core.publisher.MonoCreate$DefaultMonoSink",
  "fields": [
    {
      "name": "disposable"
    },
    {
      "name": "requestConsumer"
    },
    {
      "name": "state"
    }
  ]
},
  {
    "name": "reactor.core.publisher.MonoFlatMap$FlatMapMain",
    "fields": [
      {
        "name": "second"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain",
    "fields": [
      {
        "name": "state"
      }
    ]
  },
  {
  "name":"reactor.core.publisher.MonoWhen$WhenCoordinator",
  "fields":[{"name":"state"}]
},
{
  "name":"reactor.core.publisher.MonoWhen$WhenInner",
  "fields":[{"name":"s"}]
},
{
  "name":"reactor.core.scheduler.BoundedElasticScheduler",
  "fields":[{"name":"state"}]
},
{
  "name":"reactor.core.scheduler.BoundedElasticScheduler$BoundedServices",
  "fields":[{"name":"busyStates"}]
},
{
  "name":"reactor.core.scheduler.BoundedElasticScheduler$BoundedState",
  "fields":[{"name":"markCount"}]
},
{
  "name":"reactor.netty.http.client.HttpClient"
},
{
  "name":"reactor.netty.http.server.HttpServer"
},
{
  "name": "reactor.netty.http.server.HttpServerResponse"
},
  {
    "name": "reactor.netty.transport.ServerTransport$Acceptor",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "reactor.netty.transport.ServerTransport$AcceptorInitializer"
  },
  {
    "name": "reactor.netty.transport.TransportConnector$MonoChannelPromise",
    "fields": [
      {
        "name": "result"
      }
    ]
  },
  {
    "name": "reactor.netty5.http.server$HttpServerResponse"
  },
  {
    "name": "reactor.netty5.http.server.HttpServerResponse"
  },
  {
  "name":"reactor.tools.agent$ReactorDebugAgent"
},
{
  "name":"reactor.tools.agent.ReactorDebugAgent"
},
{
  "name":"reactor.util.lang$NonNullApi"
},
{
  "name":"reactor.util.lang.NonNullApi"
},
{
  "name":"scala$Option"
},
{
  "name":"scala.Option"
},
{
  "name":"sun.misc.Unsafe",
  "fields":[{"name":"theUnsafe"}],
  "methods": [
    {
      "name": "copyMemory",
      "parameterTypes": [
        "java.lang.Object",
        "long",
        "java.lang.Object",
        "long",
        "long"
      ]
    },
    {
      "name": "getAndAddLong",
      "parameterTypes": [
        "java.lang.Object",
        "long",
        "long"
      ]
    },
    {
      "name": "getAndSetObject",
      "parameterTypes": [
        "java.lang.Object",
        "long",
        "java.lang.Object"
      ]
    },
    {
      "name": "invokeCleaner",
      "parameterTypes": [
        "java.nio.ByteBuffer"
      ]
    },
    {
      "name": "storeFence",
      "parameterTypes": []
    }
  ]
},
  {
    "name": "sun.security.provider.MD5",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
},
{
  "name":"sun.security.provider.NativePRNG",
  "methods":[{"name":"<init>","parameterTypes":["java.security.SecureRandomParameters"] }]
},
{
  "name":"sun.security.provider.SHA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA2$SHA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]
}
]
